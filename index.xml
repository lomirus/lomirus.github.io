<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Lomirus' Site</title><link>https://lomirus.github.io/</link><description>Recent content on Lomirus' Site</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 27 Aug 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://lomirus.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>《只狼：影逝二度》名场面日语台词听写练习</title><link>https://lomirus.github.io/p/%E5%8F%AA%E7%8B%BC%E5%BD%B1%E9%80%9D%E4%BA%8C%E5%BA%A6%E5%90%8D%E5%9C%BA%E9%9D%A2%E6%97%A5%E8%AF%AD%E5%8F%B0%E8%AF%8D%E5%90%AC%E5%86%99%E7%BB%83%E4%B9%A0/</link><pubDate>Thu, 26 Aug 2021 00:00:00 +0800</pubDate><guid>https://lomirus.github.io/p/%E5%8F%AA%E7%8B%BC%E5%BD%B1%E9%80%9D%E4%BA%8C%E5%BA%A6%E5%90%8D%E5%9C%BA%E9%9D%A2%E6%97%A5%E8%AF%AD%E5%8F%B0%E8%AF%8D%E5%90%AC%E5%86%99%E7%BB%83%E4%B9%A0/</guid><description>&lt;img src="https://lomirus.github.io/p/%E5%8F%AA%E7%8B%BC%E5%BD%B1%E9%80%9D%E4%BA%8C%E5%BA%A6%E5%90%8D%E5%9C%BA%E9%9D%A2%E6%97%A5%E8%AF%AD%E5%8F%B0%E8%AF%8D%E5%90%AC%E5%86%99%E7%BB%83%E4%B9%A0/cover.png" alt="Featured image of post 《只狼：影逝二度》名场面日语台词听写练习" />&lt;h2 id="零">零&lt;/h2>
&lt;p>做这个感觉就是我单纯中二病犯了，暑假作业还没写完呢，就来整这个。不过作业毕竟也写不下去，写代码吧也是写不下去，感觉最近几天实在是太颓了。害~&lt;/p>
&lt;h2 id="永真---出场">永真 - 出场&lt;/h2>
&lt;blockquote>
&lt;p>忍びよ、目覚めて下さい。貴方の、主の為に。&lt;/p>
&lt;/blockquote>
&lt;h2 id="弦一郎---芦苇原">弦一郎 - 芦苇原&lt;/h2>
&lt;blockquote>
&lt;p>久しな、御子よ。（おじゅうん？）の（ぼうぜん？）以来か。&lt;/p>
&lt;p>久しいな、御子よ。叔父上（おじじょう）の墓前（ぼぜん）以来か。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;code>久し&lt;/code> 作为形容词少了个 &lt;code>い&lt;/code>，此处应为 &lt;code>久しいな&lt;/code>，无论是从长音还是语法上原来听的都不算对&amp;hellip;&lt;/p>
&lt;p>另外有两个生词，&lt;code>叔父上（おじじょう）&lt;/code>和&lt;code>墓前（ぼぜん）&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>弦一郎旦那。あたしはっ。済まぬ。&lt;/p>
&lt;p>弦一郎殿。あたしは。済まぬ。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;code>旦那（だんな）&lt;/code> 与 &lt;code>殿（どの）&lt;/code> 均有表示XX大人的意思，此处应用 &lt;code>殿（どの）&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>御任せよ。&lt;/p>
&lt;p>御任せを。&lt;/p>
&lt;/blockquote>
&lt;p>这里在语法上确实有些区别，不过在句意的理解上没啥影响。&lt;/p>
&lt;blockquote>
&lt;p>邪魔だってするか、御子のしのびよ。&lt;/p>
&lt;p>邪魔立てするか、御子のしのびよ。&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>んっなれ、😵&lt;/p>
&lt;p>お、のれ、😵&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>ん？🤨&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>は！😏&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>忍びよ、（ヒキ？）事は（ユウマイ？）な。御子は貰って行くぞ。&lt;/p>
&lt;p>忍びよ、卑怯（ひきょう）とは言うまいな。御子は貰って行くぞ。&lt;/p>
&lt;/blockquote>
&lt;h2 id="弦一郎---天守阁">弦一郎 - 天守阁&lt;/h2>
&lt;blockquote>
&lt;p>御爺様の（ごうゆうす？）はどうだ。&lt;/p>
&lt;p>御祖父様のご様子（ようす）はどうだ。&lt;/p>
&lt;/blockquote>
&lt;p>日语里同音词这个设定真的离谱。&lt;/p>
&lt;blockquote>
&lt;p>一心様は、命を保って（ウラレル？）のは、不思議の事です。&lt;/p>
&lt;p>一心様は、命を保っておられるのは、不思議のほどです。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;code>おられる&lt;/code> 是 &lt;code>居る（おる）&lt;/code> 的敬语形式&lt;/p>
&lt;blockquote>
&lt;p>そうか。&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>御子よ、もう一度と言う。不死の契りを俺と（もすぶ？）&lt;/p>
&lt;p>御子よ、もう一度言う。不死の契りを、俺と結べ（むすべ）&lt;/p>
&lt;/blockquote>
&lt;p>&lt;code>結べ&lt;/code> 是 &lt;code>むすぶ&lt;/code> 的命令形&lt;/p>
&lt;blockquote>
&lt;p>出来ませんぬ、弦一郎旦那。&lt;/p>
&lt;p>出来ませんぬ、弦一郎殿。&lt;/p>
&lt;/blockquote>
&lt;p>不说了，同上。&lt;/p>
&lt;blockquote>
&lt;p>（たとえひとたび？）敗れるのも、命を落とし、主に必ず取り戻し、其れが、我が忍びなれば。&lt;/p>
&lt;p>たとえ一度、敗れる（やぶれる）とも、命を賭し（とし）、主に必ず取り戻す、それが、我が忍びなれば。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;code>仮令（たとえ）...とも/ても&lt;/code> 表示纵使、即使。&lt;/p>
&lt;blockquote>
&lt;p>お迎えに参上しました。今暫く、御待ち下さい。&lt;/p>
&lt;p>お迎えに参上いたしました。今、暫く、お待ち下ください。&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>なるほどな。貴様を殺し（きらぬかぎる？）、龍胤を我が手に出来ぬよ。&lt;/p>
&lt;p>なるほどな。貴様を殺し切らぬ限り、龍胤を、我が手にはできぬような。&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>見事な、忍びよ。&lt;/p>
&lt;p>見事な、御子の忍びよ。&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>惜しいな、主を換える積りは無いか。&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>（ざれ？）事。&lt;/p>
&lt;p>戯言（ざれごこ）を。&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>（ざれ？）事だと？俺は、此の葦名を守る為なれば、どうの（？？？）力で有れ、（したかえち？）見せる。（ともえ？）の雷、見せてやろ。&lt;/p>
&lt;p>戯言だと？俺は、此の葦名を守る為なれば、どうの異端の力で有れ、縦えて見せる。巴（ともえ）の雷、見せてやろ。&lt;/p>
&lt;/blockquote>
&lt;p>这里弦一郎说 &lt;code>異端&lt;/code> 的时候声音实在太小了，听不清。不过就这个单词本身而言我还算挺熟的，甚至还记得第一次是在哪儿见到的。如果没记错的话，应该是在看《进击的巨人》里面前几话的时候，里面阿尔敏在被几个小混混揍的时候被称为 &lt;code>異端者&lt;/code>，所以我当时就顺手查了下词典记下了。&lt;/p>
&lt;blockquote>
&lt;p>葦名は、此の国は、俺の全てだ。其の為なら、俺は、人間を止めよ。&lt;/p>
&lt;p>葦名は、此の国は、俺の全てだ。其の為なら、俺は、人間を止めよう。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;code>我不做人了，JoJo！&lt;/code> 这段话着实印象深刻，甚至可以说我就是冲着这段来的🤣️&lt;/p>
&lt;blockquote>
&lt;p>（しびりと？）帰りか？&lt;/p>
&lt;p>死人（しびと）帰りか？&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>さあ。&lt;/p>
&lt;p>さらば。&lt;/p>
&lt;/blockquote>
&lt;h2 id="弦一郎一心---芦苇原">弦一郎、一心 - 芦苇原&lt;/h2>
&lt;blockquote>
&lt;p>九郎様。&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>久しいな、御子の忍び。見よ、不死斬りの（もうひとふり？）よ。&lt;/p>
&lt;p>久しいな、御子の忍び。見よ、不死斬りのもう一振りよ。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;code>一振り&lt;/code> 在这里可以认为是量词，例如 &lt;code>Moji 辞書&lt;/code> 上有一个例句：&lt;code>ひと振りの太刀（たち）&lt;/code>，意为 &lt;code>一把大刀&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>弦一郎旦那、其の用の物では、（けんしで？）葦名の運命は、変わりませぬ。狼よ、龍胤等、誰の手に有るべきではないのだ。九郎を（かける？）な。&lt;/p>
&lt;p>弦一郎殿、其のような物では、決して（けっして）葦名の運命は、変わりませぬ。狼よ、竜胤等、誰の手にも、有るべきではないのだ。苦労をかけるな。&lt;/p>
&lt;/blockquote>
&lt;p>把 &lt;code>苦労&lt;/code> 听成 &lt;code>九郎&lt;/code> 可太草了，不过毕竟只狼整天九郎九郎得叫，听错也不能全怪我嘛（&lt;/p>
&lt;p>其实当初听的时候就感觉很奇怪：把 &lt;code>九郎&lt;/code> 给 &lt;code>かける&lt;/code> 了是几个意思，应该是我听错了不是 &lt;code>かける&lt;/code> 吧？没想到这里没听错，错的反而是前面。&lt;/p>
&lt;blockquote>
&lt;p>（ぎょうい？）。前る（まえる）。&lt;/p>
&lt;p>御意（ぎょい）。参る（まいる）。&lt;/p>
&lt;/blockquote>
&lt;p>还是为 &lt;code>前る&lt;/code> 是名词活用做动词&amp;hellip;结果发现原来是我自己生造的。&lt;/p>
&lt;blockquote>
&lt;p>嗚呼、（しまいとしゅう？）。&lt;/p>
&lt;p>嗚呼、終いとしよう。&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>俺は、（きっきょく？）何も出来なかった。だっが、龍胤が、此の国を生かす。此れで葦名の夕（ゆう）は、開ける。ほんっ。&lt;/p>
&lt;p>俺は、結局（けっきょく）、何も出来なかった。だが、竜胤が、此の国を生かす。此れで葦名の夜（よ）は、明ける。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;code>划开/开启苇名的的日暮/夕阳&lt;/code> v.s. &lt;code>苇名的黑夜即将破晓&lt;/code>. 好像都能解释得过去（&lt;/p>
&lt;p>“结果我到头来，还是什么都没有做到”，划重点，感觉这句话放在这里对弦一郎的人物刻画真的是太适合了，尤其是那种体现出的无力与不甘。不过感觉其实我也和弦一郎差不多，终究是，“结果我到头来，还是什么都没有做到”😮‍💨️。&lt;/p>
&lt;blockquote>
&lt;p>哀れな（まも？）の、最後願えじゃ。わしは此の葦名を、（ゆみがえなせんねばなら？）、（ゆえに？）、隻狼、（おまし？）を斬るぞ。&lt;/p>
&lt;p>憐れな孫（まご）の、最後の願い（ねがい）じゃ。儂は此の葦名を、黄泉帰らせぬばならぬ、ゆえに隻狼、お主を斬るぞ。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;code>黄泉&lt;/code> 一词太生僻了，怨不得我呀😭&lt;/p>
&lt;p>在 “憐れな孫（まご）の、最後の願い（ねがい）じゃ” 这句话的中文翻译中，&lt;code>憐れな孫&lt;/code> 被翻译为 &lt;code>可怜孙儿&lt;/code>，这种带有陌生而又熟悉的感觉的称谓，确实莫名地使我同情起了弦一郎。&lt;/p>
&lt;p>&lt;strong>这是我可怜孙儿的，最后的愿望啊。&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>かあ。やれ。（みごこ？）じゃ、隻狼。&lt;/p>
&lt;p>かあ。やれ。見事じゃ、隻狼。&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>さらば。&lt;/p>
&lt;/blockquote></description></item><item><title>Some Impressions (2021-08)</title><link>https://lomirus.github.io/p/some-impressions-2021-08/</link><pubDate>Thu, 05 Aug 2021 18:25:17 +0800</pubDate><guid>https://lomirus.github.io/p/some-impressions-2021-08/</guid><description>&lt;h2 id="一">一&lt;/h2>
&lt;p>自上次期中总结过去也差不多两个月了，期末考试也已经过去了一个月，按说我早该动手这篇文章了，但实际上却迟迟没有动笔。这并不是说我没有时间如何如何，只是我变的愈发懒散了，于是乎便少了份写博客的动力。&lt;/p>
&lt;p>回忆起我之前每次写博客，无非是想去说什么什么，却无处施展，于是便到自己的博客上胡绉。既然如此，那每次博文的开头便少不了牢骚抱怨。每当自己去浏览自己的旧文，便发觉自己只是一个丧丧的駄目人間，不免心生愧意：将自己如此劣质的文字公诸网路，实属制造垃圾资源。又“于是乎”地，废弃了自己的博客。而这正是我上一个博客的结局。&lt;/p>
&lt;p>但是，有时候确实有些东西不吐不快。长久地将烦闷郁结在心中，绝然不能称之为一个好习惯。如此向来，将自己的博客作为自己倾吐不快的垃圾场，也算是物尽其用了。&lt;/p>
&lt;p>而今天之所以动笔，也自然是因为自己心中有所郁结，不得通其道，故述往事，思来者。&lt;/p>
&lt;h2 id="二">二&lt;/h2>
&lt;p>从暑假开始计算，我们先是度过了一个毫无意义的军训。哦不对，话其实也不能这么说，因为其一，军训的存在令我厌恶，这也可以算是它的意义；其二，总有一些人居高临下，颐指气使的斥责鄙夷这那些吐槽军训的学生，这样看来，它们想必很热爱军训吧！毕竟军训也是福报不是？&lt;/p>
&lt;p>军训结束，我们搬迁了宿舍，搬迁宿舍本身没啥，反正我也我待了一年的舍友也没什么感情。另外虽说是“自由组队”，却还是组合到了有至少三个陌生同学的宿舍。&lt;/p>
&lt;p>然后是大约一周多的自由时间，就用来一边开发项目，一边继续学习 Vue。&lt;/p>
&lt;p>最后是为期一个月的暑期培训，截至写到本文的此段时，已过五天。这五天，则一直是在忙于开发《学长学姐帮帮忙》了。&lt;/p>
&lt;p>其间我的一位朋友问过我一个问题，他问，你如何判断一个开发者的能力高低？就拿前端来说，你的能力与开发多年的前端大佬有哪些区别？&lt;/p>
&lt;p>这个问题确实有点把我问住了。我便凭感觉回答道，可能是对一些框架的掌握和原生API的熟练程度吧。&lt;/p>
&lt;p>但是他则认为，只会用框架调接口未免太“脚本小子”了。我无法反驳，尽管实际上，大多数开发岗也无非都是做着搬砖的活。&lt;/p>
&lt;p>这是他的第一次问我这个问题，后面也有第二次提问。&lt;/p>
&lt;p>不过在他上次提问过后，我回去后其实也并没有进行过多的深入思考。但我还是尝试给出了与上次不同的答案。&lt;/p>
&lt;p>这次我提到了一个人的知识面的广度，譬如我个人，虽说只是一名切图仔，但是在其他方面也多有涉猎，倘以我们网校的部门举例，我首先是本来就在后端待过半年，在 SRE 也学习过一段时间，开发过一些 Android Apps，甚至还尝试学习像素画（这条还是忽略吧）。我个人以为，在网校范围内，前端本身（特指大前端/全栈）可能是仅次于运维的全栈部门了。&lt;/p>
&lt;p>不过这样的我其实也有一些问题：接触的挺多，深入的却很少。前端本身各种轮子层出不穷，更新迭代很快。真正喜欢前端的人，也常常痴迷于新技术。最近我在网校讲授了一节前端框架相关的课，讲到 TypeScript 时，顺口提了一下 Deno。而学员里有个同学和一勤奋蜂的前端学长聊天时提到了这个，于是勤奋蜂的那位学长便表示想和我聊一下天。那天，我们聊了许多。他也是喜欢新生技术的人。他说，他想要在 WebGL，WASM，Deno 里面的选择一个去深入学习。说来惭愧，虽然这些都早有耳闻，但却没有一个能称得上是比较深入了解的。我们网校的学姐也说过我们，喜欢新技术很好，但不要每次都是写了一个 Hello World 之后就扔一边儿了。而彼时，我也正如其所言，丢掉了刚做完一个 Hello World 的 Tarui。&lt;/p>
&lt;h2 id="三">三&lt;/h2>
&lt;p>我感觉自己似乎处在某个瓶颈期，基础知识学得都差不多了，但是每当面对浩如烟海的前端进阶内容，却不知从何学起。也许刚踏入大学时，我还算比较有优势。但是随着时间的推移，我逐渐发现自己的优势正在逐渐消逝，泯然众人。我几乎已经很难说出在某个领域能够完胜其他学员了。&lt;/p>
&lt;p>但是学长却说，我们这个阶段恰好是最容易提升的时期。&lt;/p>
&lt;p>仔细想想，其实好像也对，我们现在的能力，也足以支撑我们去学习新的知识、独立开发项目和参与开源社区之类的了。&lt;/p>
&lt;p>正如狄更斯所言：&lt;/p>
&lt;blockquote>
&lt;p>It was the best of times, it was the worst of times.&lt;/p>
&lt;/blockquote>
&lt;h2 id="四">四&lt;/h2>
&lt;p>上面大部分都还是技术方面的内容，周期总结也可以算是我的 routine 了。但其实，都并非我我写这篇文章的直接原因。&lt;/p>
&lt;p>直接原因也很简单，便是见到了某个人，使我回想起了某些事，以及随之而来的一系列巧合，让我再次怀疑世界的真实性。&lt;/p>
&lt;p>这种感觉，估计得追溯到初中，从我的 depression 开始。&lt;/p>
&lt;p>我似乎每个寒假都不会有什么好事儿，尽管坏事儿也都不一定是在寒假。&lt;/p>
&lt;p>有些事我希望它能够从未发生过，例如上次。但也有些事，例如初中的某次寒假，我对它的记忆其实很模糊，因为我曾竭力试图将其忘记，它使得我第一次对世界与自身的存在的意义产生怀疑；但是现在看来，我也很庆幸我有那段经历，它也重塑了我的人生观。&lt;/p>
&lt;p>但是有些事情实在过与巧合，不过也许只是我的幸存者偏差吧。我不知道这其中是否有什么深意，如果有的话，希望结局是一个 Good Ending.&lt;/p>
&lt;h2 id="五">五&lt;/h2>
&lt;p>前几天我妈微信给我打了个电话，当时我没空，没来得及接。不过实际上，我爸妈大多数给我打的电话也都是些嘘寒问暖的话语，即使有空我也是不太愿意接的；但要是不接的话，我爸妈肯定也会不太开心的，所以一般都会回一下。这次也是，待到几天之后我有了空，我便回了一个电话。我妈在电话里说，之前之所以给我打电话，是因为我姥爷生病住院了，想让我和姥爷说说话、聊聊天之类的；不过现在已经出院了，无大碍。&lt;/p>
&lt;p>结果昨天（八月七日）晚上又给我打了个电话，自然还是少不了问一些像是“今晚饭吃了什么”这种我始终无法理解的毫无意义的话语。后面瞎侃谈到了我姥爷，我妈便吐槽我说之前谈到我姥爷生病时，我也不问问到底他是得了什么病。我便反驳说问了又能如何。&lt;/p>
&lt;p>她说，倒也确实，不过不知道我寒假回来的时候还能不能见着我姥爷。&lt;/p>
&lt;p>自然，从她的话语中，很明显能听出发生了什么样的事。但我依然没有多问。正如前文所说，问了又能如何。无非是被告知人至晚年，患了何病，大寿将至。&lt;/p>
&lt;p>说到这个，突然又想到，去年，我的奶奶也去世了，应该是在那一年的秋天吧。我其实是到了寒假才知道的：当时我正从机场出来，见我父亲等在门口，这是我第一次离开家乡，以异乡人的身外，离家近半年。父亲看到我急忙招手，和一同来的一位大叔帮我递过了行李。上车后，我爸提了一句我奶奶的事，很平静，甚至有一丝唠家常开玩笑的戏谑意。我的回复也只是一声简单的“哦”。我自然事前是不知道的，自然没去做什么心理准备。但是一切似乎如此稀松平常，我不知为何并没有太多的心理波动。我爸问我，你不说点什么吗。我反问，说些什么好呢。&lt;/p>
&lt;p>如果说非要找一些理由，以证明我尽管对祖母的去世无甚反应，却仍不是一个失掉人情味的人的话，或许我可以说，可能正是许久的不见，所造成的疏离与陌生感吧。&lt;/p>
&lt;p>我的奶奶自我在高中时，便一直卧病在床。从一开始的腿脚不便、到后来的下肢瘫痪、甚至是阿尔兹海默症，直至去世，中间其实也不过两三年。我的爷爷奶奶与我和我爸妈三口，平常并不是住在同一座房子里的。但实际上，我们两家的两座房子正门的直线距离，其实也不过几十步，所以我们家一般都是会聚在一起吃饭的。不过我奶奶自打生病，自然就不断地缺席一场又一场的每日小聚。加之我高中学业繁重，一个月回家不过二三日，与她的见面机会，便只有待短暂放假时偶尔家中做了什么佳肴，家中令我去为她送饭时了。一年所见次数不过寥寥几次，所言亦不多，自然，她的去世也并没有使我如何震撼。仿佛她的身影是逐渐褪色模糊的，而非骤然与世长辞。对于一个卧病在床者，这确实算不上什么稀奇事。&lt;/p>
&lt;p>而似乎也是去年，还是前年来着，我的老奶奶去世了。我其实并不知道“老奶奶”这个称呼的指代关系到底是什么。我对这种中国的辈份关系向来弄不清，更何况是带有方言的辈份称呼。至于她是我母亲的姥姥，还是父亲的奶奶，无论是至她的离世，还是至今，我都一直没弄清楚。&lt;/p>
&lt;p>她去世时，家人央我同去参加她的葬礼。虽然我知道，她肯定是挺爱我这个作为曾孙辈的，但是反过来，我其实对她并没有什么特别的感情。但毕竟是亲人离世，葬礼一人一生也不过一次，我便随去参加了。自然，他们还邀请了附近十里八乡我毫不认识的陌生面孔。礼节上，行一些跪拜礼、号哭礼（姑且这么叫吧，至少我无法理解他们对这啼笑的转变仪式是为何如此熟练），抬棺，烧纸，喊一些我听不懂的如同咒语般的长丧音的话语，最后入土。&lt;/p>
&lt;p>说实话，我其实对这类生老病死没什么太大的心理波动。人老而死本自然常理，非遇横祸，寿终正寝。却仍要活人披麻戴孝，摆席宴客，我实在接受不来。死了埋掉，或者烧掉。生者各有其事，各去忙自己的生活就好，何必如此。&lt;/p>
&lt;p>人死，无魂灵。却仍要造墓建碑。岂不也是浪费土地？抑或是烧香供物，号而通灵者，看了着实讽刺。&lt;/p>
&lt;p>但是，不如此，却也似乎是少了什么。人终究是感性的动物，无神论者在有实证之前，自然是不相信灵魂的。但人与人的纽带也并非会随着肉体腐烂，感情仍在，物是人非，便只好编造一些谎言，假装他们还在，还在听着我们说话。尽管最终却也还是没有什么回应就是了&amp;hellip;&lt;/p>
&lt;p>何况我本身也不善言辞，感情也都一直藏在心中，自然不喜欢这种暴露感情的仪式。时间久了，连父母都说我是冷血动物了。不过如果我真的是冷血动物，我恐怕甚至不会给予他们回应；然而幸好我不是——我只是一只哺乳动物，一只直立猿罢了。&lt;/p>
&lt;h2 id="六">六&lt;/h2>
&lt;p>今晚上摸鱼时看到了 StackOverflow 的 2021 年的年度调查。感觉很有意思的，于是就去看了一下。&lt;/p>
&lt;p>一开始是国籍，自然，没有那个国家。&lt;/p>
&lt;p>接下来是编程开始的年龄，结果调查显示，有超过 50% 的受访者是在他们 11 - 17 岁时敲下了他们的第一行代码。即使是 5 - 10 岁的，也占到了 14.08%。果然感觉自己实在太弱小了。曾经每当见到各种年少的编程大佬，往往自我安慰他们只是少数，不过现在看来，少数派们也已高达半数了。&lt;/p>
&lt;p>再往下面翻，发现居然还有对性取向和是否为跨性别者的调查结果，顿时想起了那个最大同性交友平台 Github 的哏。实在没想到调查结果居然还会包括这个，于是饶有兴趣地看了一下，发现非 LGBTQ 人群似乎占的还不算少。他们人数的总和甚至比女性程序员的人数还要多。&lt;/p>
&lt;p>再往下看，则出现了残障人士，看到这里我似乎顿感严肃了起来。说来汗颜，其实我做前端页面时，很少考虑去为一些视觉障碍者适配。倘是盲人的话，单是浏览网页的话，已实属不易，何况开发。&lt;/p>
&lt;p>真的是很难想象这类人的生活，假如是我，恐怕肯定接受不了这种痛苦吧。不过也想起了“太可怕了”王子的故事，然而这也是后话了。&lt;/p>
&lt;p>再后面，似乎还有提到程序员的心理问题的，差不多有 10% 的人都有心理焦虑等一系列的问题，也不知我能否算得上他们当中的一员。&lt;/p>
&lt;h2 id="七">七&lt;/h2>
&lt;p>最近我的一位朋友向我推荐了一首出自 &lt;em>To the Moon&lt;/em> 的音乐 &lt;em>Born a Stranger&lt;/em>。当时身边没有耳机，没有来得及去听。今天傍晚时戴上耳机，点开了这首歌。&lt;/p>
&lt;p>播放这首歌时，我正在学校的路上。在歌曲大约播放到一半时，我刚好走到了楼梯高处，看到西面的夕阳余晖躲在校园的高楼后面，虽然歌曲描述的是 &lt;em>To the Moon&lt;/em>，但当时，那副黄昏的景象也着实令我的内心深受震撼。&lt;/p>
&lt;p>不知道为什么，感觉最近的故事也似乎都充满了巧合呢。&lt;/p>
&lt;h2 id="八">八&lt;/h2>
&lt;p>最近心情一直不太好，虽然是一直待在网校里，但是也写不下去代码。&lt;/p>
&lt;p>于是我打开《荒野大镖客：救赎 II》，想打游戏放松一下。尽管嘴上和朋友说的是“摸鱼的一天又开始了”，但其实，游戏的过程也并非是多么开心。游戏自然是好游戏，但是就这款游戏本身而言，它并不算得上一款适合宣泄的渠道。仿佛是在心情压抑的时候专门去听一些令人忧郁的纯音乐，实属南辕北辙。&lt;/p>
&lt;p>最近前几天心情压抑时可能会去找一些朋友摸鱼吹水，倘能恰好聊到互相都感兴趣的话题，便仿佛是遇到知己，打开了话匣子，说了许多一直想说却又未曾与人聊过的内容。&lt;/p>
&lt;p>但是每天和别人都聊这么久似乎也不太好。所以这几天有空时，便经常会一个人去操场的观众席上，坐在那里，独自一个人，发呆，远眺，当然，还有摸鱼。&lt;/p>
&lt;p>一开始，说是要找个安静的去处来练习大舌音，不过说实话，练了这么久感觉也只是在原地踏步。后来的几天，我便带着电脑过去，自然，代码是不会写的，而是写点东西，比如说这篇文章。虽然说不出来，但即便只是写，也确实会让心情好受许多。&lt;/p>
&lt;p>昨天晚上又下了一场雨，当时我在仍在观众席上，躲在遮雨棚下。身后开启了夜灯，灯光下的跑道，雨滴淅淅沥沥的砸在水坑里。我来时，同我一起在观众席上的加上我共三人；我走时，只剩下了一个。我坐在最高处，看着他们，尽管并不知道他们在干什么。&lt;/p>
&lt;p>这是处暑后的第三日，身着短袖，自不敌入夜后的寒气，只好先行一步离开。&lt;/p>
&lt;p>离开时，我撑起雨伞，将自己送回了宿舍。&lt;/p>
&lt;p>（完）&lt;/p></description></item><item><title>Customize the Manjaro with Gnome</title><link>https://lomirus.github.io/p/customize-the-manjaro-with-gnome/</link><pubDate>Tue, 20 Jul 2021 00:00:00 +0800</pubDate><guid>https://lomirus.github.io/p/customize-the-manjaro-with-gnome/</guid><description>&lt;img src="https://lomirus.github.io/p/customize-the-manjaro-with-gnome/cover.jpg" alt="Featured image of post Customize the Manjaro with Gnome" />&lt;p>When I started to write the article, I haven&amp;rsquo;t install the Chinese Input Method, and therefore I just completed it in English.&lt;/p>
&lt;h2 id="foreword">Foreword&lt;/h2>
&lt;p>I&amp;rsquo;ve used Windows OS for a long time. I can still remember that when I was at the junior high school student, it&amp;rsquo;s 2015. I was still a fan to Microsoft at that time, and it&amp;rsquo;s also that year, that the Windows 10 was released. I was so excited but I didn&amp;rsquo;t have a PC then that could reach the lowest requirement of Windows 10. But I still recommended one of my friends and helped him install the newly released system. At the beginning, I couldn&amp;rsquo;t understand why there are so many people do not want try the new system but use the old and retired Windows XP. But many years have passed, and this time it turns to me that I cannot understand why there are still so many bugs on Windows 10. So I am waiting for Windows 11 coming soon. However, unfortunately, it is just not as good as what I thought.&lt;/p>
&lt;p>About a month ago, on Jun 17th, I installed the Manjaro with Gnome.&lt;/p>
&lt;p>But just after a month, on Jul 19th, it crashed. (but Windows is worse still I think)&lt;/p>
&lt;p>And that&amp;rsquo;s why I wrote this article &amp;mdash;- to restore my customized system quickly instead of searching the bug solutions for a whole day.&lt;/p>
&lt;h2 id="customize">Customize&lt;/h2>
&lt;h3 id="set-redrock-mirrors">Set Redrock Mirrors&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">sudo nano /etc/pacman.d/mirrorlist
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Delete other unnecessary mirrors and add:&lt;/p>
&lt;pre>&lt;code>Server = http://mirrors.redrock.team/manjaro/
&lt;/code>&lt;/pre>&lt;h3 id="set-the-keyboard-shortcuts">Set the keyboard shortcuts&lt;/h3>
&lt;p>Open:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">gnome-control-center
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Go by &lt;code>Keyboard -&amp;gt; Keyboard Shortcuts -&amp;gt; Customize Shortcuts&lt;/code>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Name&lt;/th>
&lt;th>Command&lt;/th>
&lt;th>Shortcut&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Launch Terminal&lt;/td>
&lt;td>gnome-terminal&lt;/td>
&lt;td>&lt;code>Super&lt;/code> + &lt;code>T&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Launch Nautilus&lt;/td>
&lt;td>nautilus&lt;/td>
&lt;td>&lt;code>Super&lt;/code> + &lt;code>E&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="edit-the-vscode-settings">Edit the VSCode Settings&lt;/h3>
&lt;p>You need to installl VSCode before reading this section.&lt;/p>
&lt;p>Edit &lt;code>~/.config/Code/User/settings.json&lt;/code>:&lt;/p>
&lt;pre>&lt;code class="language-json5" data-lang="json5">{
&amp;quot;window.zoomLevel&amp;quot;: 2,
// Fix Terminal Font Display
&amp;quot;terminal.integrated.fontFamily&amp;quot;: &amp;quot;NotoSansMono Nerd Font&amp;quot;,
// Make tab size from 2 to 4
&amp;quot;vetur.format.options.tabSize&amp;quot;: 4
}
&lt;/code>&lt;/pre>&lt;h3 id="enable-chrome-parallel-downloading">Enable Chrome Parallel Downloading&lt;/h3>
&lt;p>Open &lt;code>chrome://flags/#enable-parallel-downloading&lt;/code>, and switch to &lt;code>Enable&lt;/code>.&lt;/p>
&lt;h2 id="install-packages">Install Packages&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">sudo pacman -S neofetch
sudo pacman -S gcc
sudo pacman -S vim
sudo pacman -S nodejs
sudo pacman -S npm
sudo pacman -S net-tools
sudo pacman -S htop
sudo pacman -S yay
&lt;span class="c1"># To solve: `ERROR: Cannot find the fakeroot binary.` when using yay&lt;/span>
sudo pacman -S base-devel
sudo pacman -S wireshark-qt
sudo pacman -S aria2
yay -S typora
yay -S visual-studio-code-bin
yay -S obs-studio
yay -S google-chrome
yay -S electron-netease-cloud-music
yay -S emote
yay -S burpsuite
yay -S postman-bin
&lt;span class="c1"># Choose 1) scrcpy&lt;/span>
yay -S scrcpy
&lt;span class="c1"># Install Rust&lt;/span>
curl --proto &lt;span class="s1">&amp;#39;=https&amp;#39;&lt;/span> --tlsv1.2 -sSf https://sh.rustup.rs &lt;span class="p">|&lt;/span> sh
sudo npm install -g nrm
nrm use taobao
sudo npm install -g yarn
sudo npm install -g @vue/cli
sudo npm install -g create-react-app
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="install-deno">Install Deno&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">sudo pacman -S deno
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="install-docker">Install Docker&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">sudo pacman -S docker
sudo systemctl &lt;span class="nb">enable&lt;/span> docker
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="install-asia-languages-input-methods">Install Asia Languages Input Methods&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">sudo pacman -S fcitx5 fcitx5-qt fcitx5-gtk
&lt;/code>&lt;/pre>&lt;/div>&lt;p>For Chinese:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">sudo pacman -S fcitx5-rime
&lt;/code>&lt;/pre>&lt;/div>&lt;p>For Japanese:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">sudo pacman -S fcitx5-mozc
&lt;/code>&lt;/pre>&lt;/div>&lt;p>For Korean:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">sudo pacman -S fcitx5-hangul
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Edit &lt;code>~/.xprofile&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">export&lt;/span> &lt;span class="nv">GTK_IM_MODULE&lt;/span>&lt;span class="o">=&lt;/span>fcitx5
&lt;span class="nb">export&lt;/span> &lt;span class="nv">QT_IM_MODULE&lt;/span>&lt;span class="o">=&lt;/span>fcitx5
&lt;span class="nb">export&lt;/span> &lt;span class="nv">XMODIFIERS&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;@im=fcitx5&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Open &lt;code> fcitx5-configtool&lt;/code> to move the input methods from right that you are going to use to left.&lt;/p>
&lt;p>To beautify the skin of the input methods, refer to &lt;a class="link" href="https://github.com/thep0y/fcitx5-themes" target="_blank" rel="noopener"
>thep0y / fcitx5-themes&lt;/a>.&lt;/p>
&lt;h3 id="install-electron-qq">Install &lt;code>electron-qq&lt;/code>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">yay -S mongodb-bin
yay -S mongodb-tools-bin
sudo systemctl &lt;span class="nb">enable&lt;/span> mongodb.service
sudo systemctl start mongodb.service
yay -S electron-qq
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="install-clash">Install &lt;code>clash&lt;/code>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">sudo pacman -S clash
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Download &lt;code>config.yaml&lt;/code> to &lt;code>~/.config/clash&lt;/code>. Then:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">sudo systemctl &lt;span class="nb">enable&lt;/span> clash@&lt;span class="nv">$USER&lt;/span>
sudo systemctl start clash@&lt;span class="nv">$USER&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>WSL 2 入门使用与踩坑记录</title><link>https://lomirus.github.io/p/wsl-2-%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8%E4%B8%8E%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/</link><pubDate>Fri, 28 May 2021 00:00:00 +0800</pubDate><guid>https://lomirus.github.io/p/wsl-2-%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8%E4%B8%8E%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/</guid><description>&lt;img src="https://lomirus.github.io/p/wsl-2-%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8%E4%B8%8E%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/cover.png" alt="Featured image of post WSL 2 入门使用与踩坑记录" />&lt;h2 id="起因">起因&lt;/h2>
&lt;p>最近我用 rust 写了个 shogi game. 考虑到性能优化及用户体验，控制台采用 raw mode 进行渲染。结果发现兼容性不是很好，在各种 shell/terminal 上表现不尽相同。而在字体渲染上，有一说一，除了 Windows Terminal 其余的都是辣鸡。&lt;/p>
&lt;p>我（之前）平常最常用的 shell 是 Git Bash，但是正如前文所言，界面着实拉跨；而使用 Windows Terminal 打开 Git Bash 时，按退格键时又会出现闪烁现象。最终忍无可忍，于是把这些 bash/shell 全都拉出来批判一番：&lt;/p>
&lt;ul>
&lt;li>CMD: 费拉不堪&lt;/li>
&lt;li>Powershell：费拉不堪&lt;/li>
&lt;li>Gitbash: 费拉不堪&lt;/li>
&lt;/ul>
&lt;p>由于 Windows 上的 shell 人均费拉不堪，所以问了一位后端朋(dà)友(lǎo)有没有什么推荐：&lt;/p>
&lt;p>&lt;figure
>
&lt;a href="https://z3.ax1x.com/2021/05/28/2FXjHS.jpg" >
&lt;img src="https://z3.ax1x.com/2021/05/28/2FXjHS.jpg"
loading="lazy"
alt="2FXjHS.jpg">
&lt;/a>
&lt;figcaption>2FXjHS.jpg&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>结果发现人家对 shell 根本就不像我这么挑剔😂，不过也可能确实是受方向影响。因为毕竟后端首先在 Windows 方面上有成熟的 Goland IDE，确实一般情况下用不到控制台，用到终端的话一般就都是在服务器上了，而服务器则一般都是用的 Linux，所以通常没啥顾虑。而我等苦逼前端菜鸡还是要经常和各种 CLI 打交道的，所以最好还是去找一款优秀的终端软件。&lt;/p>
&lt;p>然后最终选定了 WSL 2 + Windows Terminal + VSCode.&lt;/p>
&lt;h2 id="安装">安装&lt;/h2>
&lt;p>如果 Windows 10 OS Version 大于 20262，可通过 &lt;code>wsl --install&lt;/code> 安装。&lt;/p>
&lt;p>虽然我有加入 Windows Insider 计划，不过系统还是用的 Stable，所以没有采取上述简化方式进行安装，而是采用的以下内容。&lt;/p>
&lt;p>首先，以管理员权限打开 Powershell 并输入以下命令：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="n">dism&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">exe&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="n">online&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="nb">enable-feature&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="n">featurename&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="nb">Microsoft-Windows&lt;/span>&lt;span class="n">-Subsystem-Linux&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="n">all&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="n">norestart&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>输入以下命令启用“虚拟机平台”功能，然后重启：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="n">dism&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">exe&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="n">online&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="nb">enable-feature&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="n">featurename&lt;/span>&lt;span class="err">:&lt;/span>&lt;span class="n">VirtualMachinePlatform&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="n">all&lt;/span> &lt;span class="p">/&lt;/span>&lt;span class="n">norestart&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后下载&lt;a class="link" href="https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi" target="_blank" rel="noopener"
>适用于 x64 计算机的 WSL2 Linux 内核更新包&lt;/a>并安装，以将 WSL 1 更新至 WSL 2。&lt;/p>
&lt;p>安装好后设置 WSL 2 为默认版本：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="n">wsl&lt;/span> &lt;span class="p">-&lt;/span>&lt;span class="n">-set-default-version&lt;/span> &lt;span class="n">2&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>打开&lt;a class="link" href="https://aka.ms/wslstore" target="_blank" rel="noopener"
>Microsoft Store&lt;/a>，随便选择一种发行版并安装。这里我选的是大众喜闻乐见的 Ubuntu。安装完后启动，执行一些配置就 OK 了。&lt;/p>
&lt;p>最后可以查看一下已安装的 WSL 发行版的版本信息：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="n">wsl&lt;/span> &lt;span class="p">-&lt;/span>&lt;span class="n">-list&lt;/span> &lt;span class="p">-&lt;/span>&lt;span class="n">-verbose&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>顺便说一下，安装新的发行版的操作并不会使你旧的发行版被替换掉。如果你之前安装过 WSL 1 的 Linux 发行版，而又不想将其保留，也可以将其删除掉。比如，如果我想将之前的安装的 WSL 1 Debian 删除掉，可执行以下命令：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="n">wsl&lt;/span> &lt;span class="p">-&lt;/span>&lt;span class="n">-unregister&lt;/span> &lt;span class="n">debian&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>其余操作可以使用 &lt;code>wsl -h&lt;/code> 或查看&lt;a class="link" href="https://docs.microsoft.com/zh-cn/windows/wsl/install-win10" target="_blank" rel="noopener"
>官方文档&lt;/a>。&lt;/p>
&lt;h2 id="网络代理">网络代理&lt;/h2>
&lt;p>由于 WSL 2 是通过虚拟机的方式实现，所以不能像 WSL 1 时期那样直接使用 &lt;code>127.0.0.1&lt;/code> 修改 WSL 内的网络代理。此时正确的处理方式应该是向 &lt;code>~/.bashrc&lt;/code> 添加如下内容：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="nv">hostip&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>cat /etc/resolv.conf &lt;span class="p">|&lt;/span> grep nameserver &lt;span class="p">|&lt;/span> awk &lt;span class="s1">&amp;#39;{ print $2 }&amp;#39;&lt;/span>&lt;span class="k">)&lt;/span>
&lt;span class="nv">port&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">7890&lt;/span> &lt;span class="c1"># 此处端口可根据个人情况进行更改&lt;/span>
&lt;span class="nv">PROXY_HTTP&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;http://&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">hostip&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">:&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">port&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="nb">export&lt;/span> &lt;span class="nv">http_proxy&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">PROXY_HTTP&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="nb">export&lt;/span> &lt;span class="nv">HTTP_PROXY&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">PROXY_HTTP&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="nb">export&lt;/span> &lt;span class="nv">https_proxy&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">PROXY_HTTP&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="nb">export&lt;/span> &lt;span class="nv">HTTPS_proxy&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">PROXY_HTTP&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考文章：&lt;a class="link" href="https://zinglix.xyz/2020/04/18/wsl2-proxy/" target="_blank" rel="noopener"
>WSL2 中访问宿主机 Windows 的代理&lt;/a>&lt;/p>
&lt;h2 id="环境变量">环境变量&lt;/h2>
&lt;p>在 WSL 2 中默认可获取到宿主机中的环境变量，这可能会导致某些错误，比如获取到一些没有意义的环境变量，导致环境混乱。&lt;/p>
&lt;p>若要禁止在 WSL 2 中访问 Windows 环境变量，可以先创建&lt;code>/etc/wsl.conf&lt;/code>：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">touch /etc/wsl.conf
&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后修改其内容为：&lt;/p>
&lt;pre>&lt;code>[interop]
appendWindowsPath = false
&lt;/code>&lt;/pre>&lt;h2 id="常用软件的安装">常用软件的安装&lt;/h2>
&lt;p>接下来安装几个我常用的软件包，这部分没什么技术含量，仅供以后查阅方面使用。&lt;/p>
&lt;p>首先更新软件源：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">sudo apt update
&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后安装：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="c1"># python&lt;/span>
sudo apt install python3
ln -s /usr/bin/python3 /usr/bin/python
&lt;span class="c1">## node/npm&lt;/span>
sudo apt install nodejs
sudo apt install npm
&lt;span class="c1">## yarn&lt;/span>
sudo npm install -g yarn
&lt;span class="c1">## deno&lt;/span>
sudo apt install unzip
curl -fsSL https://deno.land/x/install/install.sh &lt;span class="p">|&lt;/span> sh
&lt;span class="c1">## rust&lt;/span>
curl --proto &lt;span class="s1">&amp;#39;=https&amp;#39;&lt;/span> --tlsv1.2 -sSf https://sh.rustup.rs &lt;span class="p">|&lt;/span> sh
&lt;span class="c1"># 建议选择 `default toolchain` 为 `nightly`&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="其他坑先占位">其他坑（先占位）&lt;/h2>
&lt;p>由于 WSL 2 用到了虚拟化平台功能，可能会导致其他虚拟机（如 VirtualBox）无法运行。目前我还没解决这个问题，啥时候用空解决了再更。&lt;/p>
&lt;p>更新：解决方案：卸载 VirtualBox, 安装VMWare.&lt;/p></description></item><item><title>Vue &amp; Vite 项目搭建入门</title><link>https://lomirus.github.io/p/vue-vite-%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA%E5%85%A5%E9%97%A8/</link><pubDate>Sat, 22 May 2021 18:25:17 +0800</pubDate><guid>https://lomirus.github.io/p/vue-vite-%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA%E5%85%A5%E9%97%A8/</guid><description>&lt;img src="https://lomirus.github.io/p/vue-vite-%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA%E5%85%A5%E9%97%A8/cover.png" alt="Featured image of post Vue &amp; Vite 项目搭建入门" />&lt;h1 id="学习-vue-与-vite-项目搭建的踩坑记录">学习 Vue 与 Vite 项目搭建的踩坑记录&lt;/h1>
&lt;h2 id="vue-20--webpack">Vue 2.0 + Webpack&lt;/h2>
&lt;h3 id="installation">Installation&lt;/h3>
&lt;p>虽然 Vue 的最新版已经是 3.0，而且 Vite 也似乎是大势所趋，不过我还是选择了先从 Vue 2.0 + Webpack 这种比较传统的方式开始学习。主要是因为这几个方面：&lt;/p>
&lt;ul>
&lt;li>现在仍有许多项目没有从 Vue 2.0 迁移到 3.0，使用 Vue 2.0 进行开发在实际生产中还是比较常见的，所以以后还可能会用到 2.0；&lt;/li>
&lt;li>Vue 2.0 的资料相对比较多，踩坑时更容易查到资料；&lt;/li>
&lt;li>学习 2.0 之后再学习 3.0，会对 3.0 的改进有更深的体会，比如能够切身体会到 Vue 3.0 为什么这么那么设计、这样设计有什么好处、它解决了哪些痛处与弊端等；&lt;/li>
&lt;li>入门曲线相对平缓。&lt;/li>
&lt;/ul>
&lt;p>好了，前言就先讲到这里，接下来进入正题。&lt;/p>
&lt;p>首先创建项目：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">$ mkdir vue-learning
$ &lt;span class="nb">cd&lt;/span> vue-learning
$ npm init -y
&lt;/code>&lt;/pre>&lt;/div>&lt;p>接着安装相关库：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">$ npm install -D webpack webpack-cli webpack-dev-server html-webpack-plugin
$ npm install vue
&lt;/code>&lt;/pre>&lt;/div>&lt;p>创建相关文件，创建后的目录结构：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">$ tree -I &lt;span class="s2">&amp;#34;node_modules&amp;#34;&lt;/span>
.
&lt;span class="p">|&lt;/span>-- dist
&lt;span class="p">|&lt;/span> &lt;span class="sb">`&lt;/span>-- main.js
&lt;span class="p">|&lt;/span>-- package-lock.json
&lt;span class="p">|&lt;/span>-- package.json
&lt;span class="p">|&lt;/span>-- public
&lt;span class="p">|&lt;/span> &lt;span class="sb">`&lt;/span>-- index.html
&lt;span class="p">|&lt;/span>-- src
&lt;span class="p">|&lt;/span> &lt;span class="sb">`&lt;/span>-- index.js
&lt;span class="sb">`&lt;/span>-- webpack.config.js
&lt;span class="m">3&lt;/span> directories, &lt;span class="m">6&lt;/span> files
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>webpack.config.js&lt;/code> :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">const&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">resolve&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;path&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">HtmlWebpackPlugin&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;html-webpack-plugin&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">module&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">exports&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">mode&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;production&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">entry&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;./src/index.js&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">output&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">path&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">resolve&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;dist&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span>
&lt;span class="nx">filename&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;[name].js&amp;#34;&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;span class="nx">plugins&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">HtmlWebpackPlugin&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nx">template&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;./public/index.html&amp;#34;&lt;/span>
&lt;span class="p">})&lt;/span> &lt;span class="p">],&lt;/span>
&lt;span class="nx">devtool&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;source-map&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后基础部分就做完了，接下来开始加入 Vue：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="c1">// src/index.js
&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">Vue&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;vue&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">app&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">Vue&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>打包之后可以看到 &lt;code>dist/main.js&lt;/code> 中已经引入了 Vue 的 runtime。&lt;/p>
&lt;h3 id="runtime--compiler-vs-runtime-only">Runtime + Compiler vs. Runtime-only&lt;/h3>
&lt;p>按照官网文档中的第一个例子，修改 &lt;code>index.html&lt;/code> 的 &lt;code>body&lt;/code> 为：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;app&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
{{ message }}
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>并修改 &lt;code>index.js&lt;/code> 为以下内容：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">import&lt;/span> &lt;span class="nx">Vue&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;vue&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">app&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">Vue&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nx">el&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;#app&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">data&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">message&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;Hello World!&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后 &lt;code>npx webpack serve&lt;/code> ，打开 &lt;code>http://127.0.0.1:8080&lt;/code>，发现控制台报错：&lt;/p>
&lt;blockquote>
&lt;p>You are using the runtime-only build of Vue where the template compiler is not available. Either pre-compile the templates into render functions, or use the compiler-included build.&lt;/p>
&lt;/blockquote>
&lt;p>原因是我们导入 Vue 时使用的语句是 &lt;code>import Vue from 'vue';&lt;/code>。这行语句默认会导入 &lt;code>Runtime-only&lt;/code> 版本的 Vue，而这个版本的 Vue 是不含编译器的，因此无法编译像 &lt;code>{{ message }}&lt;/code> 这种模板语句。&lt;/p>
&lt;p>为了解决这个问题，我们可以修改一下 &lt;code>webpack.config.js&lt;/code> 的内容，向其 &lt;code>module.exports&lt;/code> assign 以下内容&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="p">{&lt;/span>
&lt;span class="nx">resolve&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">alias&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="s1">&amp;#39;vue$&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;vue/dist/vue.esm.js&amp;#39;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后编译，运行，成功！&lt;/p>
&lt;p>相关参考资料：&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://vuejs.org/v2/guide/installation.html#Runtime-Compiler-vs-Runtime-only" target="_blank" rel="noopener"
>https://vuejs.org/v2/guide/installation.html#Runtime-Compiler-vs-Runtime-only&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="single-file-components">Single File Components&lt;/h3>
&lt;p>接下来介绍一下单文件组件，这也是我比较推崇的方式。之前我写 React 时，就是采取了 CSS in JS 的方案，而不是 SCSS 或者是 Less；因为如果将&lt;code>.less&lt;/code> 和 &lt;code>.jsx&lt;/code> 分割开来的话，后期维护就会变得非常难受了。而单文件组件不仅目录结构看起来更舒服，在可维护性上也更加友好。不过 Vue 的单文件组件相比非单文件组件来说，并不仅仅是以上这些方面，比如说原生的 JavaScript 并不支持 jsx 语法，用模板字符串就显得丑了吧唧的等等。具体可参考&lt;a class="link" href="https://vuejs.org/v2/guide/single-file-components.html" target="_blank" rel="noopener"
>官方文档&lt;/a>，这里就不赘述了。&lt;/p>
&lt;p>然后正式开始，首先安装 &lt;code>vue-loader&lt;/code> 和 &lt;code>vue-template-compiler&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">$ npm install -D vue-loader vue-template-compiler
&lt;/code>&lt;/pre>&lt;/div>&lt;p>修改 &lt;code>webpack.config.js&lt;/code>，将以下内容添加到 &lt;code>module.exports&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">const&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">VueLoaderPlugin&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">require&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;vue-loader&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="nx">module&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">rules&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[{&lt;/span>
&lt;span class="nx">test&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="sr">/\.vue$/&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">use&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;vue-loader&amp;#34;&lt;/span>
&lt;span class="p">}],&lt;/span>
&lt;span class="nx">plugins&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="k">new&lt;/span> &lt;span class="nx">VueLoaderPlugin&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;span class="p">},&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考文档：https://vue-loader.vuejs.org/guide/#manual-setup&lt;/p>
&lt;p>然后修改&lt;code>index.html&lt;/code>，&lt;code>div#app&lt;/code>里面的内容全删掉就可以了，只留下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;app&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>创建文件&lt;code>App.vue&lt;/code>：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-vue" data-lang="vue">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">template&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">{{&lt;/span> &lt;span class="nx">message&lt;/span> &lt;span class="p">}}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">template&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">data&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">message&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;Hello World!&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>修改 &lt;code>index.js&lt;/code>：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="kr">import&lt;/span> &lt;span class="nx">Vue&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;vue&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">App&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;./App.vue&amp;#39;&lt;/span>
&lt;span class="k">new&lt;/span> &lt;span class="nx">Vue&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nx">el&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;#app&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">template&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;&amp;lt;App /&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">components&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">App&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="p">})&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>此时目录结构：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">$ tree -I &lt;span class="s2">&amp;#34;node_modules|dist&amp;#34;&lt;/span>
.
&lt;span class="p">|&lt;/span>-- package-lock.json
&lt;span class="p">|&lt;/span>-- package.json
&lt;span class="p">|&lt;/span>-- public
&lt;span class="p">|&lt;/span> &lt;span class="sb">`&lt;/span>-- index.html
&lt;span class="p">|&lt;/span>-- src
&lt;span class="p">|&lt;/span> &lt;span class="p">|&lt;/span>-- App.vue
&lt;span class="p">|&lt;/span> &lt;span class="sb">`&lt;/span>-- index.js
&lt;span class="sb">`&lt;/span>-- webpack.config.js
&lt;span class="m">2&lt;/span> directories, &lt;span class="m">6&lt;/span> files
&lt;/code>&lt;/pre>&lt;/div>&lt;p>完成。&lt;/p>
&lt;h2 id="vue-30--vite">Vue 3.0 + Vite&lt;/h2>
&lt;h3 id="creation">Creation&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">$ npm init @vitejs/app
√ Project name: · vite-project
√ Select a framework: · vue
√ Select a variant: · JavaScript
$ &lt;span class="nb">cd&lt;/span> vite-project
$ npm install
&lt;/code>&lt;/pre>&lt;/div>&lt;p>安装就这么完成了，没啥好说的。&lt;/p>
&lt;h3 id="simplification">Simplification&lt;/h3>
&lt;p>如果正在阅读这篇文章的你是一名初学者的话，可能对这复杂（或许？）的目录结构毫无头绪，而且事实上它也确实用到了许多高级/新特性。所以我们可以试着将它简化并还原一下。&lt;/p>
&lt;p>简化后：&lt;/p>
&lt;p>&lt;code>src/components/HelloWorld.vue&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-vue" data-lang="vue">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">template&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;{{&lt;/span> &lt;span class="nx">msg&lt;/span> &lt;span class="p">}}&amp;lt;/&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">template&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>src/App.vue&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-vue" data-lang="vue">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">template&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">HelloWorld&lt;/span> &lt;span class="na">msg&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;Hello Vue 3 + Vite&amp;#34;&lt;/span> &lt;span class="p">/&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">template&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="kr">import&lt;/span> &lt;span class="nx">HelloWorld&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;./components/HelloWorld.vue&amp;#39;&lt;/span>
&lt;span class="kr">export&lt;/span> &lt;span class="k">default&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">components&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">HelloWorld&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="next">Next&lt;/h2>
&lt;p>既然基础的项目搭建学会了，接下来就可以直接⏩到实战了（雾）。而且我最近正好要参加一个学校组织的叫什么什么数据库的比赛，或许可以考虑用比赛项目的前端部分来给 Vue 练手一下（）。那么接下来，就继续学习 Vue &amp;amp; Vite 吧！&lt;/p></description></item><item><title>大一第二学期中期总结与反思 (2021-05)</title><link>https://lomirus.github.io/p/%E5%A4%A7%E4%B8%80%E7%AC%AC%E4%BA%8C%E5%AD%A6%E6%9C%9F%E4%B8%AD%E6%9C%9F%E6%80%BB%E7%BB%93%E4%B8%8E%E5%8F%8D%E6%80%9D-2021-05/</link><pubDate>Sun, 09 May 2021 01:00:00 +0800</pubDate><guid>https://lomirus.github.io/p/%E5%A4%A7%E4%B8%80%E7%AC%AC%E4%BA%8C%E5%AD%A6%E6%9C%9F%E4%B8%AD%E6%9C%9F%E6%80%BB%E7%BB%93%E4%B8%8E%E5%8F%8D%E6%80%9D-2021-05/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>虽然说是期中总结，不过奈何拖延症又犯了，于是就又拖了两天（），于是乎就这么拖过了期中考试😅。眼看再没两个月估计就又得期末考试了，再拖下去连标题都得改，所以总算决定开始动笔了。&lt;/p>
&lt;h2 id="我这半学期学了什么">我这半学期学了什么&lt;/h2>
&lt;p>寒假的时候我一直在写考核作业。但有一说一，虽说我肝得挺厉害（至少自我感觉是），但实际上我感觉我并没学到什么太多的新东西。当然，倒不是说一点也没有，只是感觉太少了。&lt;/p>
&lt;p>寒假的时候一直想学下 Webpack 和 React 的相关知识，但苦于没时间，而到了开学之后反倒是有时间了（离谱）。于是乎我便先学习了这两个比较基础且常用的。我之所以将首选框架选为 React 而不是 Vue，主要是因为我跨平台开发框架很感兴趣，而 Flutter 对我这个前端还算比较比较遥远，因此考虑到 React Native 就先学了 React。&lt;/p>
&lt;h3 id="counter-trainer-deprecatedhttpsgithubcomlomiruscounter-trainer-deprecated">&lt;a class="link" href="https://github.com/lomirus/counter-trainer-deprecated" target="_blank" rel="noopener"
>counter-trainer-deprecated&lt;/a>&lt;/h3>
&lt;p>我第一有关 React 的项目是 counter-trainer （现在更名为 &lt;a class="link" href="https://github.com/lomirus/counter-trainer-deprecated" target="_blank" rel="noopener"
>counter-trainer-deprecated&lt;/a>），里面还顺便用到了 Less。这个项目算我前端工程化的开荒，更多的还是为了练习。开发初期的规划是想通过自适应以兼容各种分辨率，结果发现远比自己想象的复杂，加之当时对于组件间通信不甚熟悉，以及审美堪忧，最终导致代码堆成屎山，因此终止了开发。&lt;/p>
&lt;h3 id="counter-trainerhttpsgithubcomlomiruscounter-trainer">&lt;a class="link" href="https://github.com/lomirus/counter-trainer" target="_blank" rel="noopener"
>counter-trainer&lt;/a>&lt;/h3>
&lt;p>紧接着不久我就开始了第二个项目，同时也是前者的续作，也叫做 &lt;a class="link" href="https://github.com/lomirus/counter-trainer" target="_blank" rel="noopener"
>counter-trainer&lt;/a>。吸取了上一次的教训，这次只针对了移动平台进行适配，因此我选择了使用 React Native 进行开发。我从这这个项目中学习到的主要有这么几方面：&lt;/p>
&lt;ol>
&lt;li>学习了 Redux，了解了组件间通信、生命周期、Context、Fragment 等相对进阶的内容；&lt;/li>
&lt;li>开发的复杂程度不断增加，迫使我去寻找已有的库而不是重复造轮子，而在这个过程中我不得不去直接阅读一些框架的官方英文文档、去 Issues 里寻找 bugs 的解决方案。在此之前我顶多会使用像 Redux，Babel 这种近乎 Official 性质的库，对于那些小众的库还是有些抵触的，不过最后，相比于自己从头开发，直接 import 还是让我直呼真香。比如随便举几个这次用到的一些库：&lt;code>react-navigation&lt;/code>, &lt;code> react-native-tts&lt;/code> 等等，像其中的 tts 这种库，就绝不是现在的我能够徒手撸出来的，所以我也学会了不要去造一些没有必要的轮子。&lt;/li>
&lt;li>（复习了 Android 开发？（继上一次的 Kotlin 计算器））&lt;/li>
&lt;li>（直接读英文文档进一步提升了英文水准？）&lt;/li>
&lt;li>（了解了语义化版本？）&lt;/li>
&lt;/ol>
&lt;h3 id="sekiro-symbols-generatorhttpsgithubcomlomirussekiro-symbols-generator">&lt;a class="link" href="https://github.com/lomirus/sekiro-symbols-generator" target="_blank" rel="noopener"
>sekiro-symbols-generator&lt;/a>&lt;/h3>
&lt;p>这个项目应该是我最近的项目中完成度最高，也是唯一没有弃坑且最终按照原计划圆满完成了的。最终代码量约1000行。下面说一下我从这个项目中学到的东西（或者是这个项目的一些 features）：&lt;/p>
&lt;ol>
&lt;li>React Hooks：该项目全部使用函数式组件；同时在组件间通信方案的选择上废弃了 Redux ，改为了使用 React 原生 hooks；&lt;/li>
&lt;li>Typescript：该项目全部使用 Typescript；&lt;/li>
&lt;li>ESlint：该项目使用了 ESlint（这个好像不算什么亮点）；&lt;/li>
&lt;li>CSS in JS：该项目没有采取传统的 &lt;code>Less&lt;/code> or &lt;code>SASS&lt;/code>/&lt;code>SCSS&lt;/code>，而是选择了 css in js 的方案。并且在经过了多方权衡之后，最终决定了采用 &lt;code>emotion&lt;/code> 作为样式框架&lt;/li>
&lt;li>Webpack：打包时的一些优化，如 &lt;code>source-map&lt;/code>, &lt;code>code splitting&lt;/code>；&lt;/li>
&lt;li>Github Actions：自己写了个脚本自动部署并发布网站；&lt;/li>
&lt;li>Other: 如 &lt;code>React automatic runtime&lt;/code>, &lt;code>Forwarding Refs&lt;/code>,&lt;code>.gitattributes&lt;/code> 文件的使用等。&lt;/li>
&lt;/ol>
&lt;h3 id="deno">Deno&lt;/h3>
&lt;p>学了点 Deno，不过生态还是太匮乏，暂时还没什么卵用。&lt;/p>
&lt;p>有个叫 &lt;code>Aleph&lt;/code> 的框架可以用 &lt;code>React&lt;/code>， 不过是 &lt;code>SSR&lt;/code>, 不太符合我口味。&lt;/p>
&lt;h3 id="rust">Rust&lt;/h3>
&lt;p>这学期还学习了一门新语言，那就是 Rust. 打老早之前就见到很多人都在吹它，而且后来又看到 Rust 大佬 @ahabhgk 的身体力行，以及 Rust 在 WebAssembly 上无可比拟的优势以及其他各种优秀特性等等。所以就开始学习这门语言了。&lt;/p>
&lt;p>目前基础语法方面已经学完了，最近在学一些智能指针、并发等相关操作。而且开发的过程中甚至遇到了一些语言本身的 &amp;ldquo;feature&amp;rdquo;，以至于我还专门跑去官方仓库的 Issues 寻找解决方案，官方则表示只能暂时使用 unstable 的 nightly 特性作为临时解决方案，说明 Rust 还是挺早期的，还有很多坑都没填&amp;hellip;&lt;/p>
&lt;h3 id="vue">Vue&lt;/h3>
&lt;p>今天才刚刚开始学 Vue/Vite，所以暂时还没什么好说的。&lt;/p>
&lt;p>&lt;del>（不过我还是要吐槽一下 Vue 文档辣鸡（小声））&lt;/del>&lt;/p>
&lt;h2 id="接下来要做什么">接下来要做什么&lt;/h2>
&lt;p>&lt;del>😅说了这么多，还是得先把课内各种 damn courses 给解决掉，虽然有些水课设立就是为了恶心人的，但是我们也无可奈何。&lt;/del>&lt;/p>
&lt;p>立几个 flag，不过不要求要在本学期内完成，也不一定完全按照它执行，只是当作一个 Todo List 而已：&lt;/p>
&lt;h3 id="web">Web&lt;/h3>
&lt;ul>
&lt;li>Vue &amp;amp; Vite；&lt;/li>
&lt;li>React/Vue Router；&lt;/li>
&lt;li>WebAssembly;&lt;/li>
&lt;li>Next.js (SSR);&lt;/li>
&lt;li>WebRTC&lt;/li>
&lt;/ul>
&lt;h3 id="hybrid">Hybrid&lt;/h3>
&lt;ul>
&lt;li>Dart &amp;amp; Flutter&lt;/li>
&lt;/ul>
&lt;h3 id="game">Game&lt;/h3>
&lt;ul>
&lt;li>Bevy/Godot;&lt;/li>
&lt;/ul>
&lt;h3 id="other">Other&lt;/h3>
&lt;ul>
&lt;li>Decentralization, Blockchain&lt;/li>
&lt;/ul></description></item><item><title>Writing Blogs in Github Issues</title><link>https://lomirus.github.io/p/writing-blogs-in-github-issues/</link><pubDate>Sun, 09 May 2021 00:00:00 +0800</pubDate><guid>https://lomirus.github.io/p/writing-blogs-in-github-issues/</guid><description>&lt;p>我写前端至今也已有五六年了，不过这数字其实很水，前五年的大部分时间也都并没有将主要精力放在开发上，不过自己好歹也多多少少做过地做过一些项目。我第一个大型（或许？）前端项目就是一个简单的网站，有留言，还有井字棋什么的几个小游戏。再后来学过后端后，我又用 Golang 做后端，原生 JS 做前端，徒手撸了一个博客。&lt;/p>
&lt;p>我向来是没有什么写博客的习惯的，因为感觉其枯燥且无用。上次写博客主要是因为隔壁运维作业要求搭建一个博客，而我又懒得学习什么 Hexo, Wordpress 这类东西，所以就自己先简单写了一个原型，后续又不断完善，时而不时水几篇文章，然后就有了这个博客。&lt;/p>
&lt;p>不过现在这个博客已经被废弃了，一是因为博客源码太烂，二是因为文章太水，所以不愿再维护了。&lt;/p>
&lt;p>但是我时而又萌生了继续写点博客的想法，然而正如杜拉斯在《情人》的开头所言，“我已经老了”（无端？），所以我也已经不太想折腾了。网上搜资料时发现有的人直接拿 Github Issues 来写博客，想了想也确实挺符合我的需求：支持 Markdown， 可编辑，可评论，而且现在据说也可以限制他人在自己仓库里乱发 issue 了，所以我就决定选择 Github Issues 作为我的新的博客平台了。不过日后倘若又要迁居，那也是后话了。&lt;/p>
&lt;p>为防止自己继续写一些水文来占版面，所以这次可能更新频率会降低。不过有时可能受外力影响要求比如每周上交至少一篇博文，emmm，以后再具体看情况办吧。&lt;/p>
&lt;p>先写到这。&lt;/p></description></item><item><title>TypeScript &amp; Webpack &amp; Babel &amp; Eslint &amp; React: Not Such a Beautiful Marriage</title><link>https://lomirus.github.io/p/typescript-webpack-babel-eslint-react-not-such-a-beautiful-marriage/</link><pubDate>Wed, 14 Apr 2021 00:00:00 +0800</pubDate><guid>https://lomirus.github.io/p/typescript-webpack-babel-eslint-react-not-such-a-beautiful-marriage/</guid><description>&lt;img src="https://lomirus.github.io/p/typescript-webpack-babel-eslint-react-not-such-a-beautiful-marriage/cover.png" alt="Featured image of post TypeScript &amp; Webpack &amp; Babel &amp; Eslint &amp; React: Not Such a Beautiful Marriage" />&lt;p>好吧，我承认我有点标题党，主要是因为我最近被这几个工具折腾的不轻，所以想吐槽一下。（顺带一提，标题&lt;del>抄袭&lt;/del>引用改编自著名博文&lt;a class="link" href="https://medium.com/dailyjs/typescript-babel-ce24f724398" target="_blank" rel="noopener"
>TypeScript with Babel: A Beautiful Marriage&lt;/a>）&lt;/p>
&lt;h2 id="origin">Origin&lt;/h2>
&lt;p>看了下 cqupt-help-mp 的源码，发现里面用了许多库。感觉自己对这些工具还不太熟练，所以想先趁机练习一下。&lt;/p>
&lt;p>对于题目中的五个工具，除去 ESlint之外，其实其他的都多多少少用过一段时间。特别是 Webpack Babel React 这三个，用的时间也算是比较久了。TypeScript 倒是用过，但是感觉 JS 加上类型限制后写起来就不那么自由了，所以尝试用它写了一个模块之后就将它卸载了。但是这些这个工具终究还是太常用，早晚逃不了还是得学，所以就试着用它们做个简单的小项目练练手。毕竟当初我学 Webpack 时也是学得很憋屈，一直不知道这玩意儿打个包为啥还非得用 js 文件做入口，直到后来学了 React 才豁然开朗，所以我至今认为如果是要做跑在浏览器的网页而且不用什么框架的话 Webpack 还真没什么卵用。当然，有了之后自然用处就大了。&lt;/p>
&lt;p>不过说了这么多好像有点跑题，先回到正题：让我们来讨论一下究竟怎么把这五个架子给支楞到一块儿去。&lt;/p>
&lt;h2 id="introductions-of-the-packages">Introductions of the packages&lt;/h2>
&lt;p>这种东西还用得着在这介绍？官网文档，维基百科，请~&lt;/p>
&lt;h2 id="tsc-or-babel-its-a-question">TSC or Babel, it&amp;rsquo;s a question.&lt;/h2>
&lt;p>老实说，单是在两个之间进行选择就够让我想半天了。但是实际上，摆在我面前的包括但不限于：&lt;code>ts-loader&lt;/code>,&lt;code>awesome-typescript-loader&lt;/code>, &lt;code>babel-loader&lt;/code>等一堆loaders/packages。而且由于我开始参考了过时的中文文档，所以先下载了&lt;code>awesome-typescript-loader&lt;/code>，后来才意识到被坑（😅）。而在剩余的两者之间，参考&lt;a class="link" href="https://medium.com/dailyjs/typescript-babel-ce24f724398" target="_blank" rel="noopener"
>TypeScript with Babel: A Beautiful Marriage&lt;/a>后，决定选择了后者。&lt;/p>
&lt;p>安装好之后，我又顺着我的思路捋了一遍，发现整个过程中编译是&lt;code>babel&lt;/code>做的，根本没用到&lt;code>typescript&lt;/code>什么事儿呀。我于是就想，把它卸载之后会怎么样呢？接着神奇的现象发生了，我卸载了&lt;code>typescipt&lt;/code>，删除了它的配置文件&lt;code>tsconfig.json&lt;/code>，结果发现我的用&lt;code>typescript&lt;/code>写的项目居然还能正常编译并运行（谢谢有被震惊到）。我就想既然如此那我还用ts干啥呀，赶紧卸了得了，可别再让我见着你了（😅）。&lt;/p>
&lt;h2 id="anti-human-eslint">Anti-human ESLint&lt;/h2>
&lt;p>听说 ESLint 可以用在团队协作中来保证代码风格的一致性？好，名单赶紧安排上，加急。&lt;/p>
&lt;p>安装过程中被问了几个问题，回答之后他给我推荐了几个插件。行，听您的。选择 YES，进行安装。看起来一切顺利，然后&amp;hellip;果不其然，报错了。报啥呢：&lt;/p>
&lt;pre>&lt;code>Oops! Something went wrong! :(
ESLint: 7.24.0
Error: An error occurred while generating your JavaScript config file. A config file was still generated, but the config file
itself may not follow your linting rules.
Error: Failed to load plugin '@typescript-eslint' declared in 'BaseConfig': Cannot find module 'typescript'
&lt;/code>&lt;/pre>&lt;p>我心想，这不废话嘛，我又没安装 typescipt 您能到哪儿找模块去？不过话又说回来，刚才，它倒是的确问过我这么一句：&lt;/p>
&lt;pre>&lt;code>Does your project use TypeScript? · No / Yes
&lt;/code>&lt;/pre>&lt;p>唔，我要用 TypeScript 倒是没错，不过这和我安没安装 TypeScript 的 package 也没什么必然的联系吧。&lt;/p>
&lt;p>然后经过摸滚带爬的上下求索，终于意识到 typescript 貌似还是有点儿用的，再加上后面用到的 &lt;code>@types/react&lt;/code>，&lt;code>@types/react-dom&lt;/code>，感觉是在类型推断和自动补全方面有些作用（应该）&lt;/p>
&lt;h2 id="module-or-commonjs-its-a-question">Module or CommonJS, it&amp;rsquo;s a question.&lt;/h2>
&lt;p>刚才 ESLint 问我用的是 &lt;code>Module&lt;/code> 还是 &lt;code>CommonJS&lt;/code>，秉着“啥新用啥，用嘛嘛新”的原则，我当然选择的ES6的&lt;code>Module&lt;/code>。&lt;/p>
&lt;p>然后由于我的&lt;code>webpack.config.js&lt;/code>用到了&lt;code>module.exports = {}&lt;/code>，所以 ESLint报错了。&lt;/p>
&lt;pre>&lt;code>'require' is not defined. eslint(no-undef)
'module' is not defined. eslint(no-undef)
&lt;/code>&lt;/pre>&lt;p>好，那我改。&lt;/p>
&lt;p>我把 &lt;code>module.exports&lt;/code>改成了&lt;code>export default&lt;/code>，把&lt;code>require&lt;/code>改成了&lt;code>import&lt;/code>。结果又报错了：&lt;/p>
&lt;pre>&lt;code>SyntaxError: Cannot use import statement outside a module
&lt;/code>&lt;/pre>&lt;p>好，那我改。
我在&lt;code>package.json&lt;/code>里加了句 &lt;code>&amp;quot;type&amp;quot;: &amp;quot;module&amp;quot;&lt;/code>。结果又报错了：&lt;/p>
&lt;pre>&lt;code>ReferenceError: __dirname is not defined
&lt;/code>&lt;/pre>&lt;p>&lt;code>__dirname&lt;/code> 用不了可不行，那还是再改回来吧。
好，那我改。
于是回到了原点：&lt;/p>
&lt;pre>&lt;code>'require' is not defined. eslint(no-undef)
'module' is not defined. eslint(no-undef)
&lt;/code>&lt;/pre>&lt;p>（闹着玩是吧？😅）&lt;/p>
&lt;p>然后在&lt;code>.eslintrc.js&lt;/code>的&lt;code>&amp;quot;env&amp;quot;&lt;/code>中加了行&lt;code>&amp;quot;node&amp;quot;: true&lt;/code>，行，终于，不报错了。&lt;/p>
&lt;h2 id="eslint-comes-again">ESLint Comes Again&lt;/h2>
&lt;p>&lt;code>App.js&lt;/code>里有这么一段：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-tsx" data-lang="tsx">&lt;span class="kr">const&lt;/span> &lt;span class="nx">Box&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">({&lt;/span> &lt;span class="nx">title&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">children&lt;/span> &lt;span class="p">})&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h2&lt;/span>&lt;span class="p">&amp;gt;{&lt;/span>&lt;span class="nx">title&lt;/span>&lt;span class="p">}&amp;lt;/&lt;/span>&lt;span class="nt">h2&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">{&lt;/span>&lt;span class="nx">children&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>ESLint报错：&lt;/p>
&lt;pre>&lt;code>Missing return type on function. eslint(@typescript-eslint/explicit-module-boundary-types)
&lt;/code>&lt;/pre>&lt;p>接着修改代码为：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-tsx" data-lang="tsx">&lt;span class="c1">// has imported ReactElement...
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">Box&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">({&lt;/span> &lt;span class="nx">title&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">children&lt;/span> &lt;span class="p">})&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">ReactElement&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h2&lt;/span>&lt;span class="p">&amp;gt;{&lt;/span>&lt;span class="nx">title&lt;/span>&lt;span class="p">}&amp;lt;/&lt;/span>&lt;span class="nt">h2&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">{&lt;/span>&lt;span class="nx">children&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>ESLint报错：&lt;/p>
&lt;pre>&lt;code>Object pattern argument should be typed. eslint(@typescript-eslint/explicit-module-boundary-types)
'title' is missing in props validation eslint(react/prop-types)
Binding element 'children' implicitly has an 'any' type. ts(7031)
&lt;/code>&lt;/pre>&lt;p>接着修改代码为：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-tsx" data-lang="tsx">&lt;span class="c1">// has imported ReactElement...
&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kr">type&lt;/span> &lt;span class="nx">BoxProps&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">title&lt;/span>: &lt;span class="kt">string&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">children&lt;/span>: &lt;span class="kt">ReactElement&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">Box&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">({&lt;/span> &lt;span class="nx">title&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">children&lt;/span> &lt;span class="p">}&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">BoxProps&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">ReactElement&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">(&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h2&lt;/span>&lt;span class="p">&amp;gt;{&lt;/span>&lt;span class="nx">title&lt;/span>&lt;span class="p">}&amp;lt;/&lt;/span>&lt;span class="nt">h2&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">{&lt;/span>&lt;span class="nx">children&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>ESLint在这块儿倒是不报错了，不过当其他地方调用&lt;code>Box&lt;/code>又报错了：&lt;/p>
&lt;pre>&lt;code>This JSX tag's 'children' prop expects a single child of type 'ReactElement&amp;lt;any, string | JSXElementConstructor&amp;lt;any&amp;gt;&amp;gt;', but multiple children were provided.
&lt;/code>&lt;/pre>&lt;p>查了下资料，发现除了&lt;code>ReactElement&lt;/code>之外原来还有&lt;code>ReactNode&lt;/code>和&lt;code>JSX.Element&lt;/code>（参考 &lt;a class="link" href="https://stackoverflow.com/questions/58123398/when-to-use-jsx-element-vs-reactnode-vs-reactelement" target="_blank" rel="noopener"
>When to use JSX.Element vs ReactNode vs ReactElement?&lt;/a>）。&lt;/p>
&lt;p>简单总结下，原因：拉胯TS的历史遗留问题；解决方法：将&lt;code>children&lt;/code>类型改成&lt;code>ReactNode&lt;/code>&lt;/p>
&lt;h2 id="react-jsx">&lt;code>react-jsx&lt;/code>&lt;/h2>
&lt;p>在上面的 StackOverflow 里看到了 &lt;code>create-react-app&lt;/code>，这才想到可以去参考一下它的代码，话不多说，开始安装。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">npm init -y
npm install create-react-app
npx create-react-app ts --template typescript
&lt;/code>&lt;/pre>&lt;/div>&lt;p>进去之后发现他在&lt;code>tsconfig.json&lt;/code>里的&lt;code>&amp;quot;compilerOptions&amp;quot;&lt;/code>写有&lt;code>&amp;quot;jsx&amp;quot;: &amp;quot;react-jsx&amp;quot;&lt;/code>，而我之前一直都是用的&lt;code>&amp;quot;jsx&amp;quot;: &amp;quot;react&amp;quot;&lt;/code>。好奇他们之间的差别，所以去 TypeScript官网文档查了下&lt;a class="link" href="https://www.typescriptlang.org/tsconfig/#jsx" target="_blank" rel="noopener"
>资料&lt;/a>：&lt;/p>
&lt;blockquote>
&lt;p>Controls how JSX constructs are emitted in JavaScript files. This only affects output of JS files that started in .tsx files.&lt;/p>
&lt;ul>
&lt;li>react: Emit .js files with JSX changed to the equivalent React.createElement calls&lt;/li>
&lt;li>react-jsx: Emit .js files with the JSX changed to _jsx calls&lt;/li>
&lt;li>react-jsxdev: Emit .js files with the JSX to _jsx calls&lt;/li>
&lt;li>preserve: Emit .jsx files with the JSX unchanged&lt;/li>
&lt;li>react-native: Emit .js files with the JSX unchanged&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>Umm，说实话没看懂，继续往下滑，发现一个&lt;a class="link" href="https://reactjs.org/blog/2020/09/22/introducing-the-new-jsx-transform.html" target="_blank" rel="noopener"
>链接&lt;/a>，点进去，读了下，发现&lt;code>react-jsx&lt;/code>相对&lt;code>react&lt;/code>有许多优点，例如：&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>With the new transform, you can &lt;strong>use JSX without importing React&lt;/strong>.&lt;/li>
&lt;li>Depending on your setup, its compiled output may &lt;strong>slightly improve the bundle size&lt;/strong>.&lt;/li>
&lt;li>It will enable future improvements that &lt;strong>reduce the number of concepts&lt;/strong> you need to learn React.&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>继续秉承着“啥新用啥”的信条，我便将&lt;code>tsconfig.json&lt;/code>里的&lt;code>&amp;quot;jsx&amp;quot;: &amp;quot;react-jsx&amp;quot;&lt;/code>改成了&lt;code>&amp;quot;jsx&amp;quot;: &amp;quot;react&amp;quot;&lt;/code>。但是过了会儿突然想起来我使用的&lt;code>babel-loader&lt;/code>编译的，所以写在&lt;code>tsconfig.json&lt;/code>里其实并没有什么卵用&amp;hellip;&lt;/p>
&lt;p>所以应该修改&lt;code>babel.config.js&lt;/code>的&lt;code>module.exports&lt;/code>，添加以下属性：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="nx">module&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">exports&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="s2">&amp;#34;presets&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="c1">// ...
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="s2">&amp;#34;@babel/preset-react&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// ...
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="s2">&amp;#34;runtime&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;automatic&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;span class="p">]&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>不过单单这么改还是会报错，这是因为 ESLint 的缘故，实际上代码是可以正常编译的。不过 ESLint 总是报错看着很不爽呀，说实话我都想把它给卸载了。但是转念又想到将来团队协作肯定是要用到的，只好再硬着头皮继续写了。&lt;/p>
&lt;p>修改 ESLint 配置文件：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="p">{&lt;/span>
&lt;span class="c1">// ...
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="s2">&amp;#34;rules&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c1">// ...
&lt;/span>&lt;span class="c1">&lt;/span> &lt;span class="s2">&amp;#34;react/jsx-uses-react&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;off&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="s2">&amp;#34;react/react-in-jsx-scope&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;off&amp;#34;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Fiction: Upon the Mere</title><link>https://lomirus.github.io/p/fiction-upon-the-mere/</link><pubDate>Wed, 31 Mar 2021 18:25:17 +0800</pubDate><guid>https://lomirus.github.io/p/fiction-upon-the-mere/</guid><description>&lt;img src="https://lomirus.github.io/p/fiction-upon-the-mere/cover.jpg" alt="Featured image of post Fiction: Upon the Mere" />&lt;ul>
&lt;li>This is a fiction that was written as my assignment of the Comprehensive English during my freshman in CQUPT.&lt;/li>
&lt;li>The bold fonts here are used to mark the new words of this semester as my teacher requested.&lt;/li>
&lt;/ul>
&lt;h1 id="upon-the-mere">Upon the Mere&lt;/h1>
&lt;p>It&amp;rsquo;s a long dream, I&amp;rsquo;ve had, for the whole night, at the cramped cabin, in a village, my old home, from dusk to dawn. It&amp;rsquo;s a quiet place, reeds growing around it and a river soaked the nearby earth. A lake branched out from the river was just behind the village. I had never been a regular there since my childhood, because I was still so young on those days, that even the &lt;strong>reeds&lt;/strong> could cover upon my head and make me drowned. Sometimes I would stare at the surface of the lake absent-mindedly or wondered if there was a monster &lt;strong>lurking&lt;/strong> in the bottom of the lake. Though honestly, this lake was not so big, probably no more than twenty meters wide. But I can still remembered the story that my grandma once told me with a serious expression: &amp;ldquo;Once upon a time, there was an old man who was living alone near the lake. But one day he vanished, and his body was never found after that. No one knew where he&amp;rsquo;d gone&amp;rdquo;&lt;/p>
&lt;p>&amp;ldquo;So have you tried to search for him?&amp;rdquo; I asked.&lt;/p>
&lt;p>&amp;ldquo;Perhaps, I am not sure,&amp;rdquo; she answered. &amp;ldquo;He&amp;rsquo;s a odd man, and seldom went out from his house. So we just didn&amp;rsquo;t notice any &lt;strong>anomalies&lt;/strong> for his disappearance at the first days. &amp;quot;&lt;/p>
&lt;p>&amp;ldquo;But when we realized,&amp;rdquo; she added, &amp;ldquo;at least in my opinion, it&amp;rsquo;s been too late.&amp;rdquo;&lt;/p>
&lt;p>&amp;ldquo;——Umm, maybe you don&amp;rsquo;t like this story?&amp;rdquo; again it&amp;rsquo;s she that proposed. &amp;ldquo;Well, we can just leave it alone and go home for a rest now. What do you think?&amp;rdquo;&lt;/p>
&lt;p>&amp;ldquo;Whew, you&amp;rsquo;re right, &amp;quot; so I seconded, &amp;ldquo;Why need we talk such boring and scary topics. &amp;quot;&lt;/p>
&lt;p>And so I reached home, played all the left day, until the sun went down, and the stars came out beyond the clouds.&lt;/p>
&lt;p>I still miss those days of my childhood. Children like us then were always curious about the the world which they had never seen before. But with the days in and out, continuous stimulations from various novelties had been gradually making us become numb to re-perceive the world. Sometimes I might fantasized and wished there would be a &lt;em>&lt;strong>Deus ex Machina&lt;/strong>&lt;/em> to renew or even reconstruct my world. But all of those might forever only remain in my nostalgia.&lt;/p>
&lt;p>I sounds like a sad story, as if my childhood was so ordinary and boring. And as a matter of fact, I can hardly deny it, since it&amp;rsquo;s not a false description of the life, that I&amp;rsquo;ve experienced by myself. But on the other hand while in my view, most of the people just wasted their life and were busy handling all kinds of meaningless affairs forcedly or unconsciously, and finally died with doubts and regrets, but said &amp;ldquo;I&amp;rsquo;ve enjoyed my life and been enough&amp;rdquo;. And I do not think that everyone have an obligation to live an exceptional story.&lt;/p>
&lt;p>But what I said above maybe just self-comforting words. After all, no one would like to spend the whole life for their goals &lt;strong>unswervingly&lt;/strong> and then finally turn into the dust that no one knows and remembers, as if they had never come before. I don&amp;rsquo;t know which side is right. It&amp;rsquo;s like a ultimate question. So I can say with certainty, that I cannot handle it.&lt;/p>
&lt;p>But I did not think much about such things in that afternoon. For me, that afternoon was just a trivial one, of my thousands of afternoons. Many years later, when I tried to recall this period, I might have even forgotten it and cannot even utter any words about it. But I did remember that there was a time when I was truly living in that afternoon, which was enough. At least now I can still recall the dusk of that day, when the night gathered, and the darkness of forests were prolonged till the horizon. The moonlight cast on the &lt;strong>mottled&lt;/strong> leaves, and I &lt;strong>strolled&lt;/strong> along the path leading to the distance, no one with me except my shadow.&lt;/p>
&lt;p>Both of the evening breeze and the morning breeze were cool and refreshing. And in fact, I was just a kid afraid of the dark like most kids then. So I cannot ensure that my memory is right, since I can even not believe that I was so brave to walk outside the darkness alone. either. So more particularly, it was like at a summer morning, on which time I was passing the path.&lt;/p>
&lt;p>And therefore it brought me back to that distant morning again, when I was still a student. I was studying in the school of my village. It&amp;rsquo;s a small one, whose tallest building was only two floors. Ever since I started my school, I had constantly witnessed that it was &lt;strong>encroached&lt;/strong> gradually by surround growing houses and other buildings. The school also lacked the teachers. And by the way, it was said that my class teacher, also responsible for my math and other several main courses, teaching us for years, was used to be just a cook in our school, until no more teachers could be found.&lt;/p>
&lt;p>And here I want to talk about Tony, my classmate. It doesn&amp;rsquo;t mean that he&amp;rsquo;s the special one, but just, the first one that appears in my mind when I am thinking back now. He&amp;rsquo;s neither my desk-mate, nor front-desk- or back-desk-mate. To be honest, he was a guy who was a little short, quiet, and perhaps also a nerd at certain angle. But in the other hand, he was not an academic-excellent student either. Perhaps on the opposite as what you think, he just performed bad in his nearly every courses.&lt;/p>
&lt;p>But everyone at least has some areas in which (s)he is expert. And as for him, it is the origami. With no cut or paste, just by folding, the papers turned into various animals, like &lt;em>&lt;strong>senbazurus&lt;/strong>&lt;/em>&lt;!-- raw HTML omitted -->[1]&lt;!-- raw HTML omitted -->, as if given the breath of life.&lt;/p>
&lt;blockquote>
&lt;p>[1] From the Japanese word 千羽鶴（せんばづる）, meaning one thousand origami cranes. Considering its English name is too lengthy when put here and below, which may cause the inconsistent language sense from the source language, therefore here I just used its romaji.&lt;/p>
&lt;/blockquote>
&lt;p>I was interested by this kind of marvelous work and asked him if he would like to teach me how to make it. &amp;ldquo;It seems to &lt;strong>flutter&lt;/strong> away once you throw it into the air,&amp;rdquo; I &lt;strong>flattered&lt;/strong>.&lt;/p>
&lt;p>&amp;ldquo;But it cannot be true,&amp;rdquo; he responded, without looking up, just sitting on the chair and concentrating on the desk. &amp;ldquo;Senbazurus are just the senbazurus, instead the cranes indeed after all. There&amp;rsquo;s no sleep, no diet, and no joy, no pain for it. In short: &amp;lsquo;it doesn&amp;rsquo;t think, therefore it is not&amp;rsquo;.&amp;rdquo;&lt;/p>
&lt;p>I was astonished by his words and could not &lt;strong>retort&lt;/strong> for the moment. I cannot deny that it is he that was at the true side, but I just did not understand why he was so serious about my request and his works in a sudden without any &lt;strong>omens&lt;/strong>. &amp;ldquo;Perhaps he just in a bad mood today,&amp;rdquo; I thought to myself. &amp;ldquo;Maybe I should have not bothered him.&amp;rdquo;&lt;/p>
&lt;p>But except him, most of my classmates were all playing noisily in the spare time between or after classes. And Arnold was the kid king among the whole grade in the school, though there might be only a dozen of people among a whole grade in the school of my remote village. But he still had many friends, yet I was not sure if they were the friends indeed or in &lt;strong>awe&lt;/strong>. I was the one of the kind of people who were &lt;strong>taciturn&lt;/strong> and &lt;strong>introverted&lt;/strong>, so rarely have I called any of my friends to play outside, and always on the contrary——it&amp;rsquo;s they called me. And just as what I mentioned, one day, Arnold called me out——of course I would not have dared to refuse. After all, he even took me to play &lt;strong>truant&lt;/strong> together before, so what else could be more severe than that in the world, for me then the kid?&lt;/p>
&lt;p>And what did we do then? It&amp;rsquo;s already beyond my memory. What I could only remember was that Arnold seemed to have found some new preys while we were heading towards the Tony&amp;rsquo;s home. His house was just located near the lake that I mentioned above. So specifically, out destination was not Tony&amp;rsquo;s home, but was the lakefront.&lt;/p>
&lt;p>&amp;ldquo;Hey, there&amp;rsquo;s David and Mark,&amp;rdquo; Arnold said, &amp;ldquo;I&amp;rsquo;ll go to join them now. You can stay here for the moment or go back. Anyway it&amp;rsquo;s not what I need to care about.&amp;rdquo; And I chose the former. After all, David and Mark was even one grade higher than me. Since I was not too familiar with them, to stay with a relative acquaintance like Tony would be surely a better choice obviously.&lt;/p>
&lt;p>So we were just watching TV to kill time. But that&amp;rsquo;s not the only thing we used to spend. We then went out and sit around the lake to continue our words. We talked much, from tales to myths, from unicorn to phoenix, and from monsters to thrillers. I was so amazed by the unconstrained world that existed in his mind.&lt;/p>
&lt;p>I used to have such a limited outlook during my childhood, and I can prove this by telling you a another story. It was when I was playing the &lt;strong>cobbles&lt;/strong> behind the yard of my house, of course it might be boring in your eyes, but not in mine, at least at that time. Then one of my neighbors, an elder sister several years older than me, just came back from her travel to the urban district, where row upon row of skyscrapers, as she described, stood upright there. But it is not point I am going to say, because the story I am telling now actually began with her introduction about the zoo, yes, just the zoo of animals.&lt;/p>
&lt;p>She said she had seen tigers, lions, elephants and many other various animals there. But in fact, I was doubtful about her words: &amp;ldquo;No joking please,&amp;rdquo; I laughed. &amp;ldquo;There were never such things like tigers that had even existed in the world.&amp;rdquo; And then it was her turn to be surprised: &amp;ldquo;What? Why do you have such thoughts?&amp;rdquo; She laughed, too. But I was serious: &amp;ldquo;Because I&amp;rsquo;ve never seen so-called beasts in the real world, but only in TV programs or cartoons.&amp;rdquo;&lt;/p>
&lt;p>That&amp;rsquo;s really ridiculous, to only believe the things that we&amp;rsquo;ve seen, but ignore those unknown existences. I am not so naïve anymore. However, what&amp;rsquo;s more ironical is that, up to now I have not seen the tigers or lions personally yet.&lt;/p>
&lt;p>But Tony is not the same, I hardly doubted his words.&lt;/p>
&lt;p>Watching the TV for a long time would finally turned a boring activity, therefore we then went away from the chairs and just hung out in his house.&lt;/p>
&lt;p>I&amp;rsquo;ve never taken a close look at the interior of his house before. I mean, it&amp;rsquo;s the first time that I&amp;rsquo;ve taken, but, could also be the last time I did, though I didn&amp;rsquo;t realized it at that time.&lt;/p>
&lt;p>&amp;ldquo;Let me show you something interesting,&amp;rdquo; he supposed. And then he took out a picture from the drawer, and showed it to me. &amp;ldquo;That&amp;rsquo;s it,&amp;rdquo; he smiled. And in fact, it actually aroused my curiosity successfully.&lt;/p>
&lt;p>It was a black &amp;amp; white photo, slightly yellowed color reflecting the old stories beyond its experienced ages. There was a Japanese woman who stood at the prominent position of the photo, which could be easily inferred through the &lt;strong>exotic&lt;/strong> kimono she wore, and the oil-paper umbrella she held. And apart from these, beside her was also a man who was standing upright.&lt;/p>
&lt;p>So I started wondering——that who they were, and why they should appear in such picture——if they were still alive, or gone——was it a romance, or &lt;strong>tragedy&lt;/strong>.&lt;/p>
&lt;p>So I started trying to think about anything that might had some relations about this but was just in vain. Tony was an American, which I was sure about, so his parents should also be the same, apparently. I could also confirm from the accents of their tongues and appearance of their faces easily, because they were just coming back outside, opening the door, standing in front of us, and staring at us.&lt;/p>
&lt;p>So I tried to look up, and then saw his father. I attempted to greet to him or say something, but his fury suddenly erupted before my hello somehow when he noticed the picture on the desk. He tried to hold back his anger to me at first but finally still shouted to me: &amp;ldquo;Go out here, now.&amp;rdquo; And then he turned his head to Tony. The atmosphere became solemn and both me and Tony could feel the pressure from the air. The pressure seemed to push me out, and then I realized that I was just an unexpected guest, instead of the intimate of them or someone else.&lt;/p>
&lt;p>Therefore I was only to leave. Perhaps in order to avoid my &lt;strong>suffocation&lt;/strong> due to the high pressure, Tony&amp;rsquo;s mom pulled out a piece of bread from their bag and gave it me, &amp;ldquo;You are Tony&amp;rsquo;s friend, right? Don&amp;rsquo;t be nervous or worry about Tony&amp;rsquo;s father, he is always like that——oh, well, would you like this? Just take it as a gift&amp;rdquo;. But what she said didn&amp;rsquo;t relaxed me, instead, I was even more worried when I heard the word &amp;ldquo;always&amp;rdquo;. But I did not want to intensify the tension anymore so I just took it symbolically.&lt;/p>
&lt;p>But of course, no one would have any appetite at such situation. So I just threw it away on the side of the path once the figure of their house had faded away beyond my view.&lt;/p>
&lt;p>That the last time I met him, without farewell. The next term, I transferred to the school located in the county, the town district.&lt;/p>
&lt;p>&amp;ldquo;You know, the school of our village, is so&amp;hellip;&amp;rdquo;, my mother said.&lt;/p>
&lt;p>&amp;ldquo;Up to you,&amp;rdquo; I just replied casually.&lt;/p>
&lt;p>As a matter of fact, I was not the only one who transferred. According to my friends who still stayed there, after our leavings, two whole grades of the school did have classes in one classroom. Yes, just two grades, third of the primary school.&lt;/p>
&lt;p>And the next time I come back, though in fact just passing through, I found that the gate has been locked, and the yard was only left with ruined walls under overgrown weeds.&lt;/p>
&lt;p>I&amp;rsquo;ve left my hometown for education for nearly ten years. But most of my childhood friends have dropped out in their ninth grade year, drawing the period of their study career. It might seem a bit strange that though we were just living in the same village, we haven&amp;rsquo;t met each other for so many years.&lt;/p>
&lt;p>Some of them now are working on street barbecue, some do the barber and some become laborers. Some are enjoying their lives and looking forward to tomorrow. Some are dreaming of getting rich overnight and write it down as a slogan in their social medias. Some of them are just another me that lost the dreams, doing the &lt;strong>tedious&lt;/strong> work for living. Some of them have had the thick barriers with me, and I am also not the boy that denied the existence of tigers back then. Somehow I started to miss the old time&amp;hellip;&lt;/p>
&lt;p>We were all changed, never the same, like I was once travelling through the reeds forest, but now walking on the weeds meadow at the same place.&lt;/p>
&lt;p>It&amp;rsquo;s been many years since my last time came here. Things were not, and so were the people. Air smelt damp, which made me a little bit chill in addition to the evening breeze. And just like an arranged coincidence, it started to sprinkle after a while, soaked my body and extinguished the flaring flames under the lake surface. Raindrop wrinkled the lake surface, just like the origami folding the ripples. The chirp of cicada was also silenced at that night. Moon shed its lights from lake bottom, &lt;strong>scattering&lt;/strong> into beams of light. I was trying to flying to the sky, and finally touched the ceil, only to find that I had already been there, and he was smiling to me.&lt;/p>
&lt;p>&amp;ldquo;It&amp;rsquo;s getting late. Now go home and have a rest.&amp;rdquo;&lt;/p>
&lt;p>So I was trying to go back and have a rest. Though I haven&amp;rsquo;t been a regular there for the recent years, I still managed to find my way to that old house following the reeds, and then slept following his words, and therefore then I awoke——&lt;/p>
&lt;p>From a long dream, I&amp;rsquo;ve had, for the whole day, at the cramped cabin, in a village, my old home, from dawn to dusk&amp;hellip;&lt;/p></description></item></channel></rss>