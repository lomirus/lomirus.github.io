<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Vue on Lomirus' Site</title><link>https://lomirus.github.io/tags/vue/</link><description>Recent content in Vue on Lomirus' Site</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sat, 22 May 2021 18:25:17 +0800</lastBuildDate><atom:link href="https://lomirus.github.io/tags/vue/index.xml" rel="self" type="application/rss+xml"/><item><title>Vue &amp; Vite 项目搭建入门</title><link>https://lomirus.github.io/p/vue-vite-%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA%E5%85%A5%E9%97%A8/</link><pubDate>Sat, 22 May 2021 18:25:17 +0800</pubDate><guid>https://lomirus.github.io/p/vue-vite-%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA%E5%85%A5%E9%97%A8/</guid><description>学习 Vue 与 Vite 项目搭建的踩坑记录 Vue 2.0 + Webpack Installation 虽然 Vue 的最新版已经是 3.0，而且 Vite 也似乎是大势所趋，不过我还是选择了先从 Vue 2.0 + Webpack 这种比较传统的方式开始学习。主要是因为这几个方面：
现在仍有许多项目没有从 Vue 2.0 迁移到 3.0，使用 Vue 2.0 进行开发在实际生产中还是比较常见的，所以以后还可能会用到 2.0； Vue 2.0 的资料相对比较多，踩坑时更容易查到资料； 学习 2.0 之后再学习 3.0，会对 3.0 的改进有更深的体会，比如能够切身体会到 Vue 3.0 为什么这么那么设计、这样设计有什么好处、它解决了哪些痛处与弊端等； 入门曲线相对平缓。 好了，前言就先讲到这里，接下来进入正题。
首先创建项目：
$ mkdir vue-learning $ cd vue-learning $ npm init -y 接着安装相关库：
$ npm install -D webpack webpack-cli webpack-dev-server html-webpack-plugin $ npm install vue 创建相关文件，创建后的目录结构：</description></item></channel></rss>