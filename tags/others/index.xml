<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Others on Lomirus' Site</title><link>https://lomirus.github.io/tags/others/</link><description>Recent content in Others on Lomirus' Site</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 18 Nov 2022 00:00:00 +0800</lastBuildDate><atom:link href="https://lomirus.github.io/tags/others/index.xml" rel="self" type="application/rss+xml"/><item><title>有关设计的“人性化”与“反人类”</title><link>https://lomirus.github.io/p/shit-design/</link><pubDate>Fri, 18 Nov 2022 00:00:00 +0800</pubDate><guid>https://lomirus.github.io/p/shit-design/</guid><description>&lt;img src="https://lomirus.github.io/p/shit-design/cover.png" alt="Featured image of post 有关设计的“人性化”与“反人类”" />&lt;p>国外软件最让我让我厌恶的一个设计之一是，当你想查看一个帖子的发布时间、或是一个 Release 的 Publish 日期时，它只给显示了 1 year ago. 然而到底是 365 天前呢，还是 730 天（毕竟还得考虑闰年不是）前呢，那非得让你好好上下求索一番方能找到设计师到底把它藏在了何处。更有甚者，则是索性不给你提供查看原始日期的选项，如此一来其谜底究竟如何你便不得而知了——或者当然，你也可以选择再在原地等待365天来验证，前提是你愿意的话。&lt;/p>
&lt;p>今日我便深受其害，在一个历史传下来的前端项目中，同时出现了 &lt;code>pacakge-lock.json&lt;/code> 和 &lt;code>yarn.lock&lt;/code>，双份包管理器，或许开发者也能双倍快乐？正所谓：&lt;/p>
&lt;blockquote>
&lt;p>天无二日，只能有阁下一个太阳。&lt;/p>
&lt;/blockquote>
&lt;p>我是只能容忍一个包管理器的存在的。于是我开始查看他们最后的 commit 日期，想以此删掉更旧的那个。我一直有在用一个 VSCode 的 Git 插件，它可以直接利用 GUI 显示许多 Git 的相关信息。可以看到，它所显示的两个文件的 commit SHA 明显不同，然而，当我想进一步确认其提交日期时，却发现两个显示的都是 1 year ago. 这下可好，到底是哪个在前，哪个在后呢？无奈，最后还是通过手动输入 &lt;code>git blame&lt;/code> 查看它们的最后编辑日期来解决了此问题。但如此一来，我还要你这个插件干什么呢？一个本应提供给用户直观有效的信息，提高用户工作体验和效率的插件，结果却成了血压增高神器，可谓是成事不足，败事有余。&lt;/p>
&lt;p>我极其讨厌这种设计师自以为是的人性化设计，据我观察，似乎国外的软件特别喜欢这种愚蠢的设计（这句话并不代表国内的软件对其不喜欢，因为它们只是纯粹的烂）。同样的例子还有诸如操作系统不显示当前时间的秒数，在我目前所使用的系统中：Windows 11、Gnome 43、Android 12 可谓是无一例外。在我看来，一个优秀，或者说是本应只算是正常的设计，应当是在任务栏或是状态栏的时候，只显示时分，而当被点开后，则渐进式地展示给用户更多的信息，比如将这里时间精确到秒。然而它们别说是点开悬浮窗后展示了，哪怕你调出对应的 App 来，作为一个 Clock 应用，它也不会提供给你哪怕“一秒”的信息。不过我也并不是只是针对国外，譬如国内的某些下载类软件，也存在类似的不允许用户“查看详情”，只给一个黑盒，让用户丈八和尚摸不着头脑的问题。比如说一个 2 GB 的文件，显示下载进度是则是只能精确到 1.1 GB。我寻思这也都 2022 年了，提供给用户的精度却只有 1/20，还不如命令行给人的感觉爽快。求求还是赶快学学隔壁的 IDM 吧。&lt;/p>
&lt;p>论到“自以为是的人性化设计”，其中的佼佼者或者可以说是登峰造极的则必然是微软 Word 了。除此一款软件，我几乎从未使用任何比它要更反直觉的软件了。若不是学校的要求，别说是 Markdown 了，哪怕 HTML 乃至 TXT 都比它强。你打个“abc”它给你纠正成“Abc”，复制时自以为是地给你多选上回车，自以为是地给你增删缩进，字体颜色总是跟随一处不是你所想要的段落。插入个图片和文字相互遮挡，大图一页只能显示一个留下一大段空白，找个恰当的放置图片的位置要找半天&amp;hellip;诸如此类不胜枚举。毕竟，一个死板的、你说什么它就做什么而绝不多做的应用，和一个总是替你多想一步的人工智障，我还是给偏好前者的。后者在某些情况下，或许会为你提供或多或少的方便，但是也会因为在某一刻突然做出的脑残操作而令你气到骂街。前者虽机械，但最重要的是，它也不会令你的血压忽高忽低，而且当你适应了它的操作后，你双手的机械记忆说不定也会使你的效率大幅提高呢（或许类似拼音输入和语音输入之于普通话不好的用户？我基本不用语音输入，不知晓其现在的智能程度，所以不太确定此例子是否恰当）。&lt;/p>
&lt;p>除去这些“自以为是的人性化设计”类型的设计问题，还有一些其他我甚至都无法理解当时开发者的脑回路的设计。譬如 Gnome 的默认视频播放器，当你前进或是后退时，按键盘右键是前进 10 s，而按键盘左键则是后退 5 s，这简直&amp;hellip;我都没法描述我的心情了。它所造成的用户体验上的强烈的割裂感，最终还是迫使我迁移到了 MPV Player。&lt;/p>
&lt;p>记得网上有一个专门设计的“反人类登录网站”，上面收集了各种奇葩登录设计（外国人看来还是见得少了，真登录反人类还是得看张小龙）。但登录毕竟还是算用得少的，真正的反人类设计，那必然是要耦合到你的生活里，不断地恶心你的。&lt;/p></description></item><item><title>置身事外的惩戒者与千夫所指的受害者</title><link>https://lomirus.github.io/p/mirus-effect/</link><pubDate>Mon, 05 Sep 2022 00:00:00 +0800</pubDate><guid>https://lomirus.github.io/p/mirus-effect/</guid><description>&lt;img src="https://lomirus.github.io/p/mirus-effect/cover.webp" alt="Featured image of post 置身事外的惩戒者与千夫所指的受害者" />&lt;h2 id="两种奴隶">两种奴隶
&lt;/h2>&lt;p>记得挺久之前看过一副漫画，漫画的内容被分成两页作为对比。在第一页里，图片里的主人对他的奴隶说，如果自己路边的那条狗再叫下去，就要去打奴隶。奴隶被打后，于是怪罪主人旁边的那条狗。而在另一张图里，奴隶被打后，却终究忍无可忍，于是提手打向他的主人。&lt;/p>
&lt;p>可惜当时这张图没有保存下来，幸而记得还记得大概的印象。前几天又读到了鲁迅的《聪明人、奴才和傻子》，今天回想起来，于是我尝试着模仿鲁迅的文笔，将漫画里所描述的现象改写成了下面这段文字：&lt;/p>
&lt;h2 id="行人和老爷">行人和老爷
&lt;/h2>&lt;blockquote>
&lt;p>譬如老爷看到过路的行人，突然对著他的仆人，惨然说：“若是他再这样走下去，我也只好无奈打你两个嘴巴了。”行人听闻后，不管，依旧是向前走著。仆人于是终而至于被打。&lt;/p>
&lt;p>“混账”，仆人对行人骂道，“倘你听了老爷的话，我哪里会遭打。”&lt;/p>
&lt;p>“你说甚么？你这奴才&amp;hellip;”，行人回过头，直走过来，也是冲著仆人连打了两个嘴巴，“你的老爷打了你，倒反怪罪到我 ，真不像样&amp;hellip;&amp;hellip;”&lt;/p>
&lt;p>仆人不开口，想往后退了，于是轮转眼睛去看老爷。&lt;/p>
&lt;p>老爷看著仆人遭打，却只是发笑。&lt;/p>
&lt;/blockquote>
&lt;h2 id="一种现象">一种现象
&lt;/h2>&lt;p>我一直觉得这似乎是一种在生活中很常见的现象。尽管他从逻辑上来看却又极其的荒谬。&lt;/p>
&lt;p>我相信，对于在国内上过学的人，基本都会遇到过这种现象。有时老师会说，如果班里哪个人没有完成作业，全班同学就要受到什么处罚。于是后面，学生就会去怪罪那名没有完成任务的学生，却忽视了这个惩罚是由老师直接决定并实施的。&lt;/p>
&lt;p>其他类似的例子，大小皆有，此处不一一论述了。&lt;/p>
&lt;p>归纳成现象阐述的话，可以这么简述：&lt;/p>
&lt;blockquote>
&lt;p>A 向 B 提出一个条件，若条件未达成则向 B 施加惩罚。
然而，此条件所要求的实施者 C 是某个在客观上本身并不具有触发该惩罚能力的人或群体。
若条件未达成，则使得 B 在主观上将矛盾转移到（甚至同是受害者的） C 上，却忽略了 A 才是惩罚的最终决策者兼实施者。&lt;/p>
&lt;/blockquote>
&lt;p>我写完上面那篇故事，拿着去问了我一个朋友，问他这种现象/效应是否有什么命名，可惜最后我们终于还是没有找到。&lt;/p>
&lt;p>或许可以叫 Mirus Effect / 米莱斯效应？（笑）&lt;/p></description></item></channel></rss>